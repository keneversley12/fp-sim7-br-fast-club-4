{"ast":null,"code":"import { createContext, useContext, createElement, Fragment, PureComponent, createRef, useRef, useState, useEffect, memo, useMemo, Children, isValidElement, cloneElement } from 'react';\nimport invariant from 'invariant';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { Clusterer } from '@react-google-maps/marker-clusterer';\nimport { createPortal } from 'react-dom';\nimport { InfoBox } from '@react-google-maps/infobox';\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar MapContext = /*#__PURE__*/createContext(null);\nfunction useGoogleMap() {\n  !!!useContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useGoogleMap is React hook and requires React version 16.8+') : invariant(false) : void 0;\n  var map = useContext(MapContext);\n  !!!map ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useGoogleMap needs a GoogleMap available up in the tree') : invariant(false) : void 0;\n  return map;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar reduce = function reduce(obj, fn, acc) {\n  return Object.keys(obj).reduce(function reducer(newAcc, key) {\n    return fn(newAcc, obj[key], key);\n  }, acc);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction forEach(obj, fn) {\n  Object.keys(obj).forEach(function iterator(key) {\n    return fn(obj[key], key);\n  });\n}\n\n/* global google */\nvar applyUpdaterToNextProps = function applyUpdaterToNextProps(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nupdaterMap,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nprevProps,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnextProps,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninstance // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var map = {}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var iter = function iter(fn, key) {\n    var nextValue = nextProps[key];\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue;\n      fn(instance, nextValue);\n    }\n  };\n  forEach(updaterMap, iter);\n  return map;\n};\nfunction registerEvents(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nprops,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninstance, eventMap) {\n  var registeredList = reduce(eventMap, function reducer(acc, googleEventName,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onEventName) {\n    if (typeof props[onEventName] === 'function') {\n      acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]));\n    }\n    return acc;\n  }, []);\n  return registeredList;\n}\nfunction unregisterEvent(registered) {\n  google.maps.event.removeListener(registered);\n}\nfunction unregisterEvents(events) {\n  if (events === void 0) {\n    events = [];\n  }\n  events.forEach(unregisterEvent);\n}\nfunction applyUpdatersToPropsAndRegisterEvents(_ref) {\n  var updaterMap = _ref.updaterMap,\n    eventMap = _ref.eventMap,\n    prevProps = _ref.prevProps,\n    nextProps = _ref.nextProps,\n    instance = _ref.instance;\n  var registeredEvents = registerEvents(nextProps, instance, eventMap);\n  applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance);\n  return registeredEvents;\n}\nvar eventMap = {\n  onDblClick: 'dblclick',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseDown: 'mousedown',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n  onTilesLoaded: 'tilesloaded',\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDrag: 'drag',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onProjectionChanged: 'projection_changed',\n  onResize: 'resize',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed'\n};\nvar updaterMap = {\n  extraMapTypes: function extraMapTypes(map, extra) {\n    extra.forEach(function forEachExtra(it, i) {\n      map.mapTypes.set(String(i), it);\n    });\n  },\n  center: function center(map, _center) {\n    map.setCenter(_center);\n  },\n  clickableIcons: function clickableIcons(map, clickable) {\n    map.setClickableIcons(clickable);\n  },\n  heading: function heading(map, _heading) {\n    map.setHeading(_heading);\n  },\n  mapTypeId: function mapTypeId(map, _mapTypeId) {\n    map.setMapTypeId(_mapTypeId);\n  },\n  options: function options(map, _options) {\n    map.setOptions(_options);\n  },\n  streetView: function streetView(map, _streetView) {\n    map.setStreetView(_streetView);\n  },\n  tilt: function tilt(map, _tilt) {\n    map.setTilt(_tilt);\n  },\n  zoom: function zoom(map, _zoom) {\n    map.setZoom(_zoom);\n  }\n}; // function GoogleMapFunctional({ children, options, id, mapContainerStyle, center, clickableIcons, extraMapTypes, heading, mapContainerClassName, mapTypeId, onBoundsChanged, onCenterChanged, onClick, onDblClick, onDrag, onDragEnd, onDragStart, onHeadingChanged, onIdle, onProjectionChanged, onResize, onTiltChanged, onLoad }: GoogleMapProps): JSX.Element {\n//   const [map, setMap] = React.useState<google.maps.Map | null>(null)\n//   const ref = React.useRef<HTMLDivElement | null>(null)\n//   const getInstance = React.useCallback(() => {\n//     if (ref.current === null) {\n//       return null\n//     }\n//     return new google.maps.Map(ref.current, options)\n//   }, [options])\n//   React.useEffect(() => {\n//   }, [])\n//   const panTo = React.useCallback((latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n//     const map = getInstance()\n//     if (map) {\n//       map.panTo(latLng)\n//     }\n//   }, [])\n//   React.useEffect(() => {\n//     const map = getInstance()\n//   }, [])\n//   return (\n//     <div\n//         id={id}\n//         ref={ref}\n//         style={mapContainerStyle}\n//         className={mapContainerClassName}\n//       >\n//         <MapContext.Provider value={map}>\n//           {map !== null ? children : <></>}\n//         </MapContext.Provider>\n//       </div>\n//   )\n// }\n\nvar GoogleMap = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(GoogleMap, _React$PureComponent);\n  function GoogleMap() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      map: null\n    };\n    _this.registeredEvents = [];\n    _this.mapRef = null;\n    _this.getInstance = function () {\n      if (_this.mapRef === null) {\n        return null;\n      }\n      return new google.maps.Map(_this.mapRef, _this.props.options);\n    };\n    _this.panTo = function (latLng) {\n      var map = _this.getInstance();\n      if (map) {\n        map.panTo(latLng);\n      }\n    };\n    _this.setMapCallback = function () {\n      if (_this.state.map !== null) {\n        if (_this.props.onLoad) {\n          _this.props.onLoad(_this.state.map);\n        }\n      }\n    };\n    _this.getRef = function (ref) {\n      _this.mapRef = ref;\n    };\n    return _this;\n  }\n  var _proto = GoogleMap.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var map = this.getInstance();\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap,\n      eventMap: eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: map\n    });\n    this.setState(function setMap() {\n      return {\n        map: map\n      };\n    }, this.setMapCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.map !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap,\n        eventMap: eventMap,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.map\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.map !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.map);\n      }\n      unregisterEvents(this.registeredEvents);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(\"div\", {\n      id: this.props.id,\n      ref: this.getRef,\n      style: this.props.mapContainerStyle,\n      className: this.props.mapContainerClassName\n    }, createElement(MapContext.Provider, {\n      value: this.state.map\n    }, this.state.map !== null ? this.props.children : createElement(Fragment, null)));\n  };\n  return GoogleMap;\n}(PureComponent);\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function (obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []);\n\n      // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n    exports.wrap = wrap;\n\n    // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\";\n\n    // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n    var ContinueSentinel = {};\n\n    // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n\n    // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n    var IteratorPrototype = {};\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\");\n\n    // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction ||\n      // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    };\n\n    // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n      var previousPromise;\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,\n        // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n\n      // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n      this._invoke = enqueue;\n    }\n    defineIteratorMethods(AsyncIterator.prototype);\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n    exports.AsyncIterator = AsyncIterator;\n\n    // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          }\n\n          // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n          return doneResult();\n        }\n        context.method = method;\n        context.arg = arg;\n        while (true) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted;\n            // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    }\n\n    // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n        return ContinueSentinel;\n      }\n      var record = tryCatch(method, delegate.iterator, context.arg);\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n      var info = record.arg;\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value;\n\n        // Resume execution at the desired location (see delegateYield).\n        context.next = delegate.nextLoc;\n\n        // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      }\n\n      // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\");\n\n    // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n      this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n    exports.keys = function (object) {\n      var keys = [];\n      for (var key in object) {\n        keys.push(key);\n      }\n      keys.reverse();\n\n      // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        }\n\n        // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n        next.done = true;\n        return next;\n      };\n    };\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n            next = function next() {\n              while (++i < iterable.length) {\n                if (hasOwn.call(iterable, i)) {\n                  next.value = iterable[i];\n                  next.done = false;\n                  return next;\n                }\n              }\n              next.value = undefined$1;\n              next.done = true;\n              return next;\n            };\n          return next.next = next;\n        }\n      }\n\n      // Return an iterator with no values.\n      return {\n        next: doneResult\n      };\n    }\n    exports.values = values;\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0;\n        // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n        var context = this;\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n          return !!caught;\n        }\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n            return thrown;\n          }\n        }\n\n        // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n        return ContinueSentinel;\n      }\n    };\n\n    // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n    return exports;\n  }(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n});\nvar isBrowser = typeof document !== 'undefined';\nvar injectScript = function injectScript(_ref) {\n  var url = _ref.url,\n    id = _ref.id,\n    nonce = _ref.nonce;\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'));\n  }\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    var existingScript = document.getElementById(id);\n    var windowWithGoogleMap = window;\n    if (existingScript) {\n      // Same script id/url: keep same script\n      var dataStateAttribute = existingScript.getAttribute('data-state');\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id);\n        } else {\n          var originalInitMap = windowWithGoogleMap.initMap;\n          var originalErrorCallback = existingScript.onerror;\n          windowWithGoogleMap.initMap = function initMap() {\n            if (originalInitMap) {\n              originalInitMap();\n            }\n            resolve(id);\n          };\n          existingScript.onerror = function (err) {\n            if (originalErrorCallback) {\n              originalErrorCallback(err);\n            }\n            reject(err);\n          };\n          return;\n        }\n      } // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n        existingScript.remove();\n      }\n    }\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.id = id;\n    script.async = true;\n    script.nonce = nonce;\n    script.onerror = function onerror(err) {\n      script.setAttribute('data-state', 'error');\n      reject(err);\n    };\n    windowWithGoogleMap.initMap = function onload() {\n      script.setAttribute('data-state', 'ready');\n      resolve(id);\n    };\n    document.head.appendChild(script);\n  })[\"catch\"](function (err) {\n    console.error('injectScript error: ', err);\n    throw err;\n  });\n};\nvar isRobotoStyle = function isRobotoStyle(element) {\n  // roboto font download\n  if (element.href && element.href.indexOf('https://fonts.googleapis.com/css?family=Roboto') === 0) {\n    return true;\n  } // roboto style elements\n\n  if (element.tagName.toLowerCase() === 'style' &&\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet &&\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet.cssText &&\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet.cssText.replace('\\r\\n', '').indexOf('.gm-style') === 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText = '';\n    return true;\n  } // roboto style elements for other browsers\n\n  if (element.tagName.toLowerCase() === 'style' && element.innerHTML && element.innerHTML.replace('\\r\\n', '').indexOf('.gm-style') === 0) {\n    element.innerHTML = '';\n    return true;\n  } // when google tries to add empty style\n\n  if (element.tagName.toLowerCase() === 'style' &&\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  !element.styleSheet && !element.innerHTML) {\n    return true;\n  }\n  return false;\n}; // Preventing the Google Maps library from downloading an extra font\n\nvar preventGoogleFonts = function preventGoogleFonts() {\n  // we override these methods only for one particular head element\n  // default methods for other elements are not affected\n  var head = document.getElementsByTagName('head')[0];\n  var trueInsertBefore = head.insertBefore.bind(head); // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n\n  head.insertBefore = function insertBefore(newElement, referenceElement) {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement]);\n    }\n  };\n  var trueAppend = head.appendChild.bind(head); // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n\n  head.appendChild = function appendChild(textNode) {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode]);\n    }\n  };\n};\nfunction makeLoadScriptUrl(_ref) {\n  var googleMapsApiKey = _ref.googleMapsApiKey,\n    googleMapsClientId = _ref.googleMapsClientId,\n    _ref$version = _ref.version,\n    version = _ref$version === void 0 ? 'weekly' : _ref$version,\n    language = _ref.language,\n    region = _ref.region,\n    libraries = _ref.libraries,\n    channel = _ref.channel,\n    mapIds = _ref.mapIds;\n  var params = [];\n  !(googleMapsApiKey && googleMapsClientId || !(googleMapsApiKey && googleMapsClientId)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.') : invariant(false) : void 0;\n  if (googleMapsApiKey) {\n    params.push(\"key=\" + googleMapsApiKey);\n  } else if (googleMapsClientId) {\n    params.push(\"client=\" + googleMapsClientId);\n  }\n  if (version) {\n    params.push(\"v=\" + version);\n  }\n  if (language) {\n    params.push(\"language=\" + language);\n  }\n  if (region) {\n    params.push(\"region=\" + region);\n  }\n  if (libraries && libraries.length) {\n    params.push(\"libraries=\" + libraries.sort().join(','));\n  }\n  if (channel) {\n    params.push(\"channel=\" + channel);\n  }\n  if (mapIds && mapIds.length) {\n    params.push(\"map_ids=\" + mapIds.join(','));\n  }\n  params.push('callback=initMap');\n  return \"https://maps.googleapis.com/maps/api/js?\" + params.join('&');\n}\nvar cleaningUp = false;\nfunction DefaultLoadingElement() {\n  return createElement(\"div\", null, \"Loading...\");\n}\nvar defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly'\n};\nvar LoadScript = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(LoadScript, _React$PureComponent);\n  function LoadScript() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.check = createRef();\n    _this.state = {\n      loaded: false\n    };\n    _this.cleanupCallback = function () {\n      // @ts-ignore\n      delete window.google.maps;\n      _this.injectScript();\n    };\n    _this.isCleaningUp = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var promiseCallback;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              promiseCallback = function _promiseCallback(resolve) {\n                if (!cleaningUp) {\n                  resolve();\n                } else {\n                  if (isBrowser) {\n                    var timer = window.setInterval(function interval() {\n                      if (!cleaningUp) {\n                        window.clearInterval(timer);\n                        resolve();\n                      }\n                    }, 1);\n                  }\n                }\n                return;\n              };\n              return _context.abrupt(\"return\", new Promise(promiseCallback));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.cleanup = function () {\n      cleaningUp = true;\n      var script = document.getElementById(_this.props.id);\n      if (script && script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      Array.prototype.slice.call(document.getElementsByTagName('script')).filter(function filter(script) {\n        return typeof script.src === 'string' && script.src.includes('maps.googleapis');\n      }).forEach(function forEach(script) {\n        if (script.parentNode) {\n          script.parentNode.removeChild(script);\n        }\n      });\n      Array.prototype.slice.call(document.getElementsByTagName('link')).filter(function filter(link) {\n        return link.href === 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans';\n      }).forEach(function forEach(link) {\n        if (link.parentNode) {\n          link.parentNode.removeChild(link);\n        }\n      });\n      Array.prototype.slice.call(document.getElementsByTagName('style')).filter(function filter(style) {\n        return style.innerText !== undefined && style.innerText.length > 0 && style.innerText.includes('.gm-');\n      }).forEach(function forEach(style) {\n        if (style.parentNode) {\n          style.parentNode.removeChild(style);\n        }\n      });\n    };\n    _this.injectScript = function () {\n      if (_this.props.preventGoogleFontsLoading) {\n        preventGoogleFonts();\n      }\n      !!!_this.props.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LoadScript requires \"id\" prop to be a string: %s', _this.props.id) : invariant(false) : void 0;\n      var injectScriptOptions = {\n        id: _this.props.id,\n        nonce: _this.props.nonce,\n        url: makeLoadScriptUrl(_this.props)\n      };\n      injectScript(injectScriptOptions).then(function () {\n        if (_this.props.onLoad) {\n          _this.props.onLoad();\n        }\n        _this.setState(function setLoaded() {\n          return {\n            loaded: true\n          };\n        });\n        return;\n      })[\"catch\"](function (err) {\n        if (_this.props.onError) {\n          _this.props.onError(err);\n        }\n        console.error(\"\\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (\" + (_this.props.googleMapsApiKey || '-') + \") or Client ID (\" + (_this.props.googleMapsClientId || '-') + \") to <LoadScript />\\n          Otherwise it is a Network issue.\\n        \");\n      });\n    };\n    return _this;\n  }\n  var _proto = LoadScript.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    if (isBrowser) {\n      if (window.google && window.google.maps && !cleaningUp) {\n        console.error('google api is already presented');\n        return;\n      }\n      this.isCleaningUp().then(this.injectScript)[\"catch\"](function error(err) {\n        console.error('Error at injecting script after cleaning up: ', err);\n      });\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.libraries !== prevProps.libraries) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n    if (isBrowser && prevProps.language !== this.props.language) {\n      this.cleanup(); // TODO: refactor to use gDSFP maybe... wait for hooks refactoring.\n      // eslint-disable-next-line react/no-did-update-set-state\n\n      this.setState(function setLoaded() {\n        return {\n          loaded: false\n        };\n      }, this.cleanupCallback);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var _this2 = this;\n    if (isBrowser) {\n      this.cleanup();\n      var timeoutCallback = function timeoutCallback() {\n        if (!_this2.check.current) {\n          // @ts-ignore\n          delete window.google;\n          cleaningUp = false;\n        }\n      };\n      window.setTimeout(timeoutCallback, 1);\n      if (this.props.onUnmount) {\n        this.props.onUnmount();\n      }\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null, createElement(\"div\", {\n      ref: this.check\n    }), this.state.loaded ? this.props.children : this.props.loadingElement || createElement(DefaultLoadingElement, null));\n  };\n  return LoadScript;\n}(PureComponent);\nLoadScript.defaultProps = defaultLoadScriptProps;\n\n/* eslint-disable filenames/match-regex */\nvar previouslyLoadedUrl;\nfunction useLoadScript(_ref) {\n  var _ref$id = _ref.id,\n    id = _ref$id === void 0 ? defaultLoadScriptProps.id : _ref$id,\n    _ref$version = _ref.version,\n    version = _ref$version === void 0 ? defaultLoadScriptProps.version : _ref$version,\n    nonce = _ref.nonce,\n    googleMapsApiKey = _ref.googleMapsApiKey,\n    googleMapsClientId = _ref.googleMapsClientId,\n    language = _ref.language,\n    region = _ref.region,\n    libraries = _ref.libraries,\n    preventGoogleFontsLoading = _ref.preventGoogleFontsLoading,\n    channel = _ref.channel,\n    mapIds = _ref.mapIds;\n  var isMounted = useRef(false);\n  var _React$useState = useState(false),\n    isLoaded = _React$useState[0],\n    setLoaded = _React$useState[1];\n  var _React$useState2 = useState(undefined),\n    loadError = _React$useState2[0],\n    setLoadError = _React$useState2[1];\n  useEffect(function trackMountedState() {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(function applyPreventGoogleFonts() {\n    if (isBrowser && preventGoogleFontsLoading) {\n      preventGoogleFonts();\n    }\n  }, [preventGoogleFontsLoading]);\n  useEffect(function validateLoadedState() {\n    if (isLoaded) {\n      !!!window.google ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.') : invariant(false) : void 0;\n    }\n  }, [isLoaded]);\n  var url = makeLoadScriptUrl({\n    version: version,\n    googleMapsApiKey: googleMapsApiKey,\n    googleMapsClientId: googleMapsClientId,\n    language: language,\n    region: region,\n    libraries: libraries,\n    channel: channel,\n    mapIds: mapIds\n  });\n  useEffect(function loadScriptAndModifyLoadedState() {\n    if (!isBrowser) {\n      return;\n    }\n    function setLoadedIfMounted() {\n      if (isMounted.current) {\n        setLoaded(true);\n        previouslyLoadedUrl = url;\n      }\n    }\n    if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n      setLoadedIfMounted();\n      return;\n    }\n    injectScript({\n      id: id,\n      url: url,\n      nonce: nonce\n    }).then(setLoadedIfMounted)[\"catch\"](function handleInjectError(err) {\n      if (isMounted.current) {\n        setLoadError(err);\n      }\n      console.warn(\"\\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (\" + (googleMapsApiKey || '-') + \") or Client ID (\" + (googleMapsClientId || '-') + \")\\n        Otherwise it is a Network issue.\\n      \");\n      console.error(err);\n    });\n  }, [id, url, nonce]);\n  var prevLibraries = useRef();\n  useEffect(function checkPerformance() {\n    if (prevLibraries.current && libraries !== prevLibraries.current) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n    prevLibraries.current = libraries;\n  }, [libraries]);\n  return {\n    isLoaded: isLoaded,\n    loadError: loadError,\n    url: url\n  };\n}\nvar defaultLoadingElement = /*#__PURE__*/createElement(DefaultLoadingElement, null);\nfunction LoadScriptNext(_ref) {\n  var loadingElement = _ref.loadingElement,\n    onLoad = _ref.onLoad,\n    onError = _ref.onError,\n    onUnmount = _ref.onUnmount,\n    children = _ref.children,\n    hookOptions = _objectWithoutPropertiesLoose(_ref, [\"loadingElement\", \"onLoad\", \"onError\", \"onUnmount\", \"children\"]);\n  var _useLoadScript = useLoadScript(hookOptions),\n    isLoaded = _useLoadScript.isLoaded,\n    loadError = _useLoadScript.loadError;\n  useEffect(function handleOnLoad() {\n    if (isLoaded && typeof onLoad === 'function') {\n      onLoad();\n    }\n  }, [isLoaded, onLoad]);\n  useEffect(function handleOnError() {\n    if (loadError && typeof onError === 'function') {\n      onError(loadError);\n    }\n  }, [loadError, onError]);\n  useEffect(function handleOnUnmount() {\n    return function () {\n      if (onUnmount) {\n        onUnmount();\n      }\n    };\n  }, [onUnmount]);\n  return isLoaded ? children : loadingElement || defaultLoadingElement;\n}\nvar LoadScriptNext$1 = /*#__PURE__*/memo(LoadScriptNext);\n\n/* eslint-disable filenames/match-regex */\nfunction useJsApiLoader(_ref) {\n  var _ref$id = _ref.id,\n    id = _ref$id === void 0 ? defaultLoadScriptProps.id : _ref$id,\n    _ref$version = _ref.version,\n    version = _ref$version === void 0 ? defaultLoadScriptProps.version : _ref$version,\n    nonce = _ref.nonce,\n    googleMapsApiKey = _ref.googleMapsApiKey,\n    language = _ref.language,\n    region = _ref.region,\n    libraries = _ref.libraries,\n    preventGoogleFontsLoading = _ref.preventGoogleFontsLoading,\n    mapIds = _ref.mapIds;\n  var _React$useState = useState(false),\n    isLoaded = _React$useState[0],\n    setLoaded = _React$useState[1];\n  var _React$useState2 = useState(undefined),\n    loadError = _React$useState2[0],\n    setLoadError = _React$useState2[1];\n  var loader = useMemo(function memo() {\n    return new Loader({\n      id: id,\n      apiKey: googleMapsApiKey,\n      version: version,\n      libraries: libraries,\n      language: language,\n      region: region,\n      mapIds: mapIds,\n      nonce: nonce\n    });\n  }, [id, googleMapsApiKey, version, libraries, language, region, mapIds, nonce]);\n  useEffect(function effect() {\n    if (isLoaded) {\n      return;\n    } else {\n      loader.load().then(function then() {\n        setLoaded(true);\n      })[\"catch\"](function onrejected(error) {\n        setLoadError(error);\n      });\n    }\n  }, []);\n  useEffect(function applyPreventGoogleFonts() {\n    if (isBrowser && preventGoogleFontsLoading) {\n      preventGoogleFonts();\n    }\n  }, [preventGoogleFontsLoading]);\n  var prevLibraries = useRef();\n  useEffect(function effect() {\n    if (prevLibraries.current && libraries !== prevLibraries.current) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n    prevLibraries.current = libraries;\n  }, [libraries]);\n  return {\n    isLoaded: isLoaded,\n    loadError: loadError\n  };\n}\nvar eventMap$1 = {};\nvar updaterMap$1 = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  }\n};\nvar TrafficLayer = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(TrafficLayer, _PureComponent);\n  function TrafficLayer() {\n    var _this;\n    _this = _PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      trafficLayer: null\n    };\n    _this.setTrafficLayerCallback = function () {\n      if (_this.state.trafficLayer !== null) {\n        if (_this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          _this.props.onLoad(_this.state.trafficLayer);\n        }\n      }\n    };\n    _this.registeredEvents = [];\n    return _this;\n  }\n  var _proto = TrafficLayer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var trafficLayer = new google.maps.TrafficLayer(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$1,\n      eventMap: eventMap$1,\n      prevProps: {},\n      nextProps: this.props,\n      instance: trafficLayer\n    });\n    this.setState(function setTrafficLayer() {\n      return {\n        trafficLayer: trafficLayer\n      };\n    }, this.setTrafficLayerCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.trafficLayer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$1,\n        eventMap: eventMap$1,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.trafficLayer\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.trafficLayer);\n      }\n      unregisterEvents(this.registeredEvents); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.trafficLayer.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return TrafficLayer;\n}(PureComponent);\nTrafficLayer.contextType = MapContext;\nvar BicyclingLayer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(BicyclingLayer, _React$PureComponent);\n  function BicyclingLayer() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      bicyclingLayer: null\n    };\n    _this.setBicyclingLayerCallback = function () {\n      if (_this.state.bicyclingLayer !== null) {\n        // TODO: how is this possibly null if we're doing a null check\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this.state.bicyclingLayer.setMap(_this.context);\n        if (_this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          _this.props.onLoad(_this.state.bicyclingLayer);\n        }\n      }\n    };\n    return _this;\n  }\n  var _proto = BicyclingLayer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var bicyclingLayer = new google.maps.BicyclingLayer();\n    this.setState(function setBicyclingLayer() {\n      return {\n        bicyclingLayer: bicyclingLayer\n      };\n    }, this.setBicyclingLayerCallback);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.bicyclingLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.bicyclingLayer);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.bicyclingLayer.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return BicyclingLayer;\n}(PureComponent);\nBicyclingLayer.contextType = MapContext;\nvar TransitLayer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(TransitLayer, _React$PureComponent);\n  function TransitLayer() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      transitLayer: null\n    };\n    _this.setTransitLayerCallback = function () {\n      if (_this.state.transitLayer !== null) {\n        // TODO: how is this possibly null if we're doing a null check\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this.state.transitLayer.setMap(_this.context);\n        if (_this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          _this.props.onLoad(_this.state.transitLayer);\n        }\n      }\n    };\n    return _this;\n  }\n  var _proto = TransitLayer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var transitLayer = new google.maps.TransitLayer();\n    this.setState(function setTransitLayer() {\n      return {\n        transitLayer: transitLayer\n      };\n    }, this.setTransitLayerCallback);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.transitLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.transitLayer);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.transitLayer.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return TransitLayer;\n}(PureComponent);\nTransitLayer.contextType = MapContext;\nvar eventMap$2 = {\n  onCircleComplete: 'circlecomplete',\n  onMarkerComplete: 'markercomplete',\n  onOverlayComplete: 'overlaycomplete',\n  onPolygonComplete: 'polygoncomplete',\n  onPolylineComplete: 'polylinecomplete',\n  onRectangleComplete: 'rectanglecomplete'\n};\nvar updaterMap$2 = {\n  drawingMode: function drawingMode(instance, _drawingMode) {\n    instance.setDrawingMode(_drawingMode);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  }\n};\nvar DrawingManager = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DrawingManager, _React$PureComponent);\n  function DrawingManager(props) {\n    var _this;\n    _this = _React$PureComponent.call(this, props) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      drawingManager: null\n    };\n    _this.setDrawingManagerCallback = function () {\n      if (_this.state.drawingManager !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.drawingManager);\n      }\n    };\n    !!!google.maps.drawing ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Did you include prop libraries={['drawing']} in the URL? %s\", google.maps.drawing) : invariant(false) : void 0;\n    return _this;\n  }\n  var _proto = DrawingManager.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var drawingManager = new google.maps.drawing.DrawingManager(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$2,\n      eventMap: eventMap$2,\n      prevProps: {},\n      nextProps: this.props,\n      instance: drawingManager\n    });\n    this.setState(function setDrawingManager() {\n      return {\n        drawingManager: drawingManager\n      };\n    }, this.setDrawingManagerCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.drawingManager !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$2,\n        eventMap: eventMap$2,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.drawingManager\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.drawingManager !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.drawingManager);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.drawingManager.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return DrawingManager;\n}(PureComponent);\nDrawingManager.contextType = MapContext;\nvar eventMap$3 = {\n  onAnimationChanged: 'animation_changed',\n  onClick: 'click',\n  onClickableChanged: 'clickable_changed',\n  onCursorChanged: 'cursor_changed',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDraggableChanged: 'draggable_changed',\n  onDragStart: 'dragstart',\n  onFlatChanged: 'flat_changed',\n  onIconChanged: 'icon_changed',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPositionChanged: 'position_changed',\n  onRightClick: 'rightclick',\n  onShapeChanged: 'shape_changed',\n  onTitleChanged: 'title_changed',\n  onVisibleChanged: 'visible_changed',\n  onZindexChanged: 'zindex_changed'\n};\nvar updaterMap$3 = {\n  animation: function animation(instance, _animation) {\n    instance.setAnimation(_animation);\n  },\n  clickable: function clickable(instance, _clickable) {\n    instance.setClickable(_clickable);\n  },\n  cursor: function cursor(instance, _cursor) {\n    instance.setCursor(_cursor);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  icon: function icon(instance, _icon) {\n    instance.setIcon(_icon);\n  },\n  label: function label(instance, _label) {\n    instance.setLabel(_label);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  opacity: function opacity(instance, _opacity) {\n    instance.setOpacity(_opacity);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  shape: function shape(instance, _shape) {\n    instance.setShape(_shape);\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar Marker = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Marker, _React$PureComponent);\n  function Marker() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    return _this;\n  }\n  var _proto = Marker.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var markerOptions = _extends({}, this.props.options || {}, this.props.clusterer ? {} : {\n      map: this.context\n    }, {\n      position: this.props.position\n    }); // Unfortunately we can't just do this in the contstructor, because the\n    // `MapContext` might not be filled in yet.\n\n    this.marker = new google.maps.Marker(markerOptions);\n    if (this.props.clusterer) {\n      this.props.clusterer.addMarker(this.marker, !!this.props.noClustererRedraw);\n    } else {\n      this.marker.setMap(this.context);\n    }\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$3,\n      eventMap: eventMap$3,\n      prevProps: {},\n      nextProps: this.props,\n      instance: this.marker\n    });\n    if (this.props.onLoad) {\n      this.props.onLoad(this.marker);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.marker) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$3,\n        eventMap: eventMap$3,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.marker\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.marker) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.marker);\n      }\n      unregisterEvents(this.registeredEvents);\n      if (this.props.clusterer) {\n        this.props.clusterer.removeMarker(this.marker, !!this.props.noClustererRedraw);\n      } else {\n        this.marker && this.marker.setMap(null);\n      }\n    }\n  };\n  _proto.render = function render() {\n    var _this2 = this;\n    var children = null;\n    if (this.props.children) {\n      children = Children.map(this.props.children, function (child) {\n        if (!isValidElement(child)) {\n          return child;\n        }\n        var elementChild = child;\n        return cloneElement(elementChild, {\n          anchor: _this2.marker\n        });\n      });\n    }\n    return children || null;\n  };\n  return Marker;\n}(PureComponent);\nMarker.contextType = MapContext;\nvar eventMap$4 = {\n  onClick: 'click',\n  onClusteringBegin: 'clusteringbegin',\n  onClusteringEnd: 'clusteringend',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover'\n};\nvar updaterMap$4 = {\n  averageCenter: function averageCenter(instance, _averageCenter) {\n    instance.setAverageCenter(_averageCenter);\n  },\n  batchSizeIE: function batchSizeIE(instance, _batchSizeIE) {\n    instance.setBatchSizeIE(_batchSizeIE);\n  },\n  calculator: function calculator(instance, _calculator) {\n    instance.setCalculator(_calculator);\n  },\n  clusterClass: function clusterClass(instance, _clusterClass) {\n    instance.setClusterClass(_clusterClass);\n  },\n  enableRetinaIcons: function enableRetinaIcons(instance, _enableRetinaIcons) {\n    instance.setEnableRetinaIcons(_enableRetinaIcons);\n  },\n  gridSize: function gridSize(instance, _gridSize) {\n    instance.setGridSize(_gridSize);\n  },\n  ignoreHidden: function ignoreHidden(instance, _ignoreHidden) {\n    instance.setIgnoreHidden(_ignoreHidden);\n  },\n  imageExtension: function imageExtension(instance, _imageExtension) {\n    instance.setImageExtension(_imageExtension);\n  },\n  imagePath: function imagePath(instance, _imagePath) {\n    instance.setImagePath(_imagePath);\n  },\n  imageSizes: function imageSizes(instance, _imageSizes) {\n    instance.setImageSizes(_imageSizes);\n  },\n  maxZoom: function maxZoom(instance, _maxZoom) {\n    instance.setMaxZoom(_maxZoom);\n  },\n  minimumClusterSize: function minimumClusterSize(instance, _minimumClusterSize) {\n    instance.setMinimumClusterSize(_minimumClusterSize);\n  },\n  styles: function styles(instance, _styles) {\n    instance.setStyles(_styles);\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title);\n  },\n  zoomOnClick: function zoomOnClick(instance, _zoomOnClick) {\n    instance.setZoomOnClick(_zoomOnClick);\n  }\n};\nvar ClustererComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ClustererComponent, _React$PureComponent);\n  function ClustererComponent() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      markerClusterer: null\n    };\n    _this.setClustererCallback = function () {\n      if (_this.state.markerClusterer !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.markerClusterer);\n      }\n    };\n    return _this;\n  }\n  var _proto = ClustererComponent.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.context) {\n      var markerClusterer = new Clusterer(this.context, [], this.props.options);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$4,\n        eventMap: eventMap$4,\n        prevProps: {},\n        nextProps: this.props,\n        instance: markerClusterer\n      });\n      this.setState(function setClusterer() {\n        return {\n          markerClusterer: markerClusterer\n        };\n      }, this.setClustererCallback);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.markerClusterer) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$4,\n        eventMap: eventMap$4,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.markerClusterer\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.markerClusterer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.markerClusterer);\n      }\n      unregisterEvents(this.registeredEvents); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.markerClusterer.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return this.state.markerClusterer !== null ? this.props.children(this.state.markerClusterer) : null;\n  };\n  return ClustererComponent;\n}(PureComponent);\nClustererComponent.contextType = MapContext;\nvar eventMap$5 = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed'\n};\nvar updaterMap$5 = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    if (_position instanceof google.maps.LatLng) {\n      instance.setPosition(_position);\n    } else {\n      instance.setPosition(new google.maps.LatLng(_position.lat, _position.lng));\n    }\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar InfoBoxComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(InfoBoxComponent, _React$PureComponent);\n  function InfoBoxComponent() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = null;\n    _this.state = {\n      infoBox: null\n    };\n    _this.open = function (infoBox, anchor) {\n      if (anchor) {\n        infoBox.open(_this.context, anchor);\n      } else if (infoBox.getPosition()) {\n        infoBox.open(_this.context);\n      } else {\n        process.env.NODE_ENV !== \"production\" ? invariant(false, 'You must provide either an anchor or a position prop for <InfoBox>.') : invariant(false);\n      }\n    };\n    _this.setInfoBoxCallback = function () {\n      var _this$props = _this.props,\n        anchor = _this$props.anchor,\n        onLoad = _this$props.onLoad;\n      var infoBox = _this.state.infoBox;\n      if (infoBox !== null && _this.containerElement !== null) {\n        infoBox.setContent(_this.containerElement);\n        _this.open(infoBox, anchor);\n        if (onLoad) {\n          onLoad(infoBox);\n        }\n      }\n    };\n    return _this;\n  }\n  var _proto = InfoBoxComponent.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var options = this.props.options;\n    var _ref = options || {},\n      position = _ref.position,\n      infoBoxOptions = _objectWithoutPropertiesLoose(_ref, [\"position\"]);\n    var positionLatLng;\n    if (position && !(position instanceof google.maps.LatLng)) {\n      positionLatLng = new google.maps.LatLng(position.lat, position.lng);\n    }\n    var infoBox = new InfoBox(_extends({}, infoBoxOptions, positionLatLng ? {\n      position: positionLatLng\n    } : {}));\n    this.containerElement = document.createElement('div');\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$5,\n      eventMap: eventMap$5,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoBox\n    });\n    this.setState({\n      infoBox: infoBox\n    }, this.setInfoBoxCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var infoBox = this.state.infoBox;\n    if (infoBox !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$5,\n        eventMap: eventMap$5,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: infoBox\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var onUnmount = this.props.onUnmount;\n    var infoBox = this.state.infoBox;\n    if (infoBox !== null) {\n      if (onUnmount) {\n        onUnmount(infoBox);\n      }\n      unregisterEvents(this.registeredEvents);\n      infoBox.close();\n    }\n  };\n  _proto.render = function render() {\n    if (!this.containerElement) {\n      return null;\n    }\n    return createPortal(Children.only(this.props.children), this.containerElement);\n  };\n  return InfoBoxComponent;\n}(PureComponent);\nInfoBoxComponent.contextType = MapContext;\nvar eventMap$6 = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed'\n};\nvar updaterMap$6 = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar InfoWindow = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(InfoWindow, _React$PureComponent);\n  function InfoWindow() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = null;\n    _this.state = {\n      infoWindow: null\n    };\n    _this.open = function (infoWindow, anchor) {\n      if (anchor) {\n        infoWindow.open(_this.context, anchor);\n      } else if (infoWindow.getPosition()) {\n        infoWindow.open(_this.context);\n      } else {\n        process.env.NODE_ENV !== \"production\" ? invariant(false, \"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.\") : invariant(false);\n      }\n    };\n    _this.setInfoWindowCallback = function () {\n      if (_this.state.infoWindow !== null && _this.containerElement !== null) {\n        _this.state.infoWindow.setContent(_this.containerElement);\n        _this.open(_this.state.infoWindow, _this.props.anchor);\n        if (_this.props.onLoad) {\n          _this.props.onLoad(_this.state.infoWindow);\n        }\n      }\n    };\n    return _this;\n  }\n  var _proto = InfoWindow.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var infoWindow = new google.maps.InfoWindow(_extends({}, this.props.options || {}));\n    this.containerElement = document.createElement('div');\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$6,\n      eventMap: eventMap$6,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoWindow\n    });\n    this.setState(function setInfoWindow() {\n      return {\n        infoWindow: infoWindow\n      };\n    }, this.setInfoWindowCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$6,\n        eventMap: eventMap$6,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.infoWindow\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.state.infoWindow.close();\n    }\n  };\n  _proto.render = function render() {\n    return this.containerElement ? createPortal(Children.only(this.props.children), this.containerElement) : createElement(Fragment, null);\n  };\n  return InfoWindow;\n}(PureComponent);\nInfoWindow.contextType = MapContext;\nvar eventMap$7 = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$7 = {\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  path: function path(instance, _path) {\n    instance.setPath(_path);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Polyline = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Polyline, _React$PureComponent);\n  function Polyline() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      polyline: null\n    };\n    _this.setPolylineCallback = function () {\n      if (_this.state.polyline !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.polyline);\n      }\n    };\n    return _this;\n  }\n  var _proto = Polyline.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var polyline = new google.maps.Polyline(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$7,\n      eventMap: eventMap$7,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polyline\n    });\n    this.setState(function setPolyline() {\n      return {\n        polyline: polyline\n      };\n    }, this.setPolylineCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.polyline !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$7,\n        eventMap: eventMap$7,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.polyline\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.polyline !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polyline);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.polyline.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return Polyline;\n}(PureComponent);\nPolyline.contextType = MapContext;\nvar eventMap$8 = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$8 = {\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  path: function path(instance, _path) {\n    instance.setPath(_path);\n  },\n  paths: function paths(instance, _paths) {\n    instance.setPaths(_paths);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Polygon = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Polygon, _React$PureComponent);\n  function Polygon() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      polygon: null\n    };\n    _this.setPolygonCallback = function () {\n      if (_this.state.polygon !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.polygon);\n      }\n    };\n    return _this;\n  }\n  var _proto = Polygon.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var polygon = new google.maps.Polygon(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$8,\n      eventMap: eventMap$8,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polygon\n    });\n    this.setState(function setPolygon() {\n      return {\n        polygon: polygon\n      };\n    }, this.setPolygonCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.polygon !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$8,\n        eventMap: eventMap$8,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.polygon\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.polygon !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polygon);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.polygon && this.state.polygon.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return Polygon;\n}(PureComponent);\nPolygon.contextType = MapContext;\nvar eventMap$9 = {\n  onBoundsChanged: 'bounds_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$9 = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Rectangle = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Rectangle, _React$PureComponent);\n  function Rectangle() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      rectangle: null\n    };\n    _this.setRectangleCallback = function () {\n      if (_this.state.rectangle !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.rectangle);\n      }\n    };\n    return _this;\n  }\n  var _proto = Rectangle.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var rectangle = new google.maps.Rectangle(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$9,\n      eventMap: eventMap$9,\n      prevProps: {},\n      nextProps: this.props,\n      instance: rectangle\n    });\n    this.setState(function setRectangle() {\n      return {\n        rectangle: rectangle\n      };\n    }, this.setRectangleCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.rectangle !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$9,\n        eventMap: eventMap$9,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.rectangle\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.rectangle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.rectangle);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.rectangle.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return Rectangle;\n}(PureComponent);\nRectangle.contextType = MapContext;\nvar eventMap$a = {\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRadiusChanged: 'radius_changed',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$a = {\n  center: function center(instance, _center) {\n    instance.setCenter(_center);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  radius: function radius(instance, _radius) {\n    instance.setRadius(_radius);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Circle = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Circle, _React$PureComponent);\n  function Circle() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      circle: null\n    };\n    _this.setCircleCallback = function () {\n      if (_this.state.circle !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.circle);\n      }\n    };\n    return _this;\n  }\n  var _proto = Circle.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var circle = new google.maps.Circle(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$a,\n      eventMap: eventMap$a,\n      prevProps: {},\n      nextProps: this.props,\n      instance: circle\n    });\n    this.setState(function setCircle() {\n      return {\n        circle: circle\n      };\n    }, this.setCircleCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.circle !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$a,\n        eventMap: eventMap$a,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.circle\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.circle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.circle);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.circle && this.state.circle.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return Circle;\n}(PureComponent);\nCircle.contextType = MapContext;\nvar eventMap$b = {\n  onAddFeature: 'addfeature',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRemoveFeature: 'removefeature',\n  onRemoveProperty: 'removeproperty',\n  onRightClick: 'rightclick',\n  onSetGeometry: 'setgeometry',\n  onSetProperty: 'setproperty'\n};\nvar updaterMap$b = {\n  add: function add(instance, features) {\n    instance.add(features);\n  },\n  addgeojson: function addgeojson(instance, geojson, options) {\n    instance.addGeoJson(geojson, options);\n  },\n  contains: function contains(instance, feature) {\n    instance.contains(feature);\n  },\n  foreach: function foreach(instance, callback) {\n    instance.forEach(callback);\n  },\n  loadgeojson: function loadgeojson(instance, url, options, callback) {\n    instance.loadGeoJson(url, options, callback);\n  },\n  overridestyle: function overridestyle(instance, feature, style) {\n    instance.overrideStyle(feature, style);\n  },\n  remove: function remove(instance, feature) {\n    instance.remove(feature);\n  },\n  revertstyle: function revertstyle(instance, feature) {\n    instance.revertStyle(feature);\n  },\n  controlposition: function controlposition(instance, controlPosition) {\n    instance.setControlPosition(controlPosition);\n  },\n  controls: function controls(instance, _controls) {\n    instance.setControls(_controls);\n  },\n  drawingmode: function drawingmode(instance, mode) {\n    instance.setDrawingMode(mode);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  style: function style(instance, _style) {\n    instance.setStyle(_style);\n  },\n  togeojson: function togeojson(instance, callback) {\n    instance.toGeoJson(callback);\n  }\n};\nvar Data = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Data, _React$PureComponent);\n  function Data() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      data: null\n    };\n    _this.setDataCallback = function () {\n      if (_this.state.data !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.data);\n      }\n    };\n    return _this;\n  }\n  var _proto = Data.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var data = new google.maps.Data(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$b,\n      eventMap: eventMap$b,\n      prevProps: {},\n      nextProps: this.props,\n      instance: data\n    });\n    this.setState(function setData() {\n      return {\n        data: data\n      };\n    }, this.setDataCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.data !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$b,\n        eventMap: eventMap$b,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.data\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.data !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.data);\n      }\n      unregisterEvents(this.registeredEvents);\n      if (this.state.data) {\n        this.state.data.setMap(null);\n      }\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return Data;\n}(PureComponent);\nData.contextType = MapContext;\nvar eventMap$c = {\n  onClick: 'click',\n  onDefaultViewportChanged: 'defaultviewport_changed',\n  onStatusChanged: 'status_changed'\n};\nvar updaterMap$c = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  url: function url(instance, _url) {\n    instance.setUrl(_url);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar KmlLayer = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(KmlLayer, _PureComponent);\n  function KmlLayer() {\n    var _this;\n    _this = _PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      kmlLayer: null\n    };\n    _this.setKmlLayerCallback = function () {\n      if (_this.state.kmlLayer !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.kmlLayer);\n      }\n    };\n    return _this;\n  }\n  var _proto = KmlLayer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var kmlLayer = new google.maps.KmlLayer(_extends({}, this.props.options, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$c,\n      eventMap: eventMap$c,\n      prevProps: {},\n      nextProps: this.props,\n      instance: kmlLayer\n    });\n    this.setState(function setLmlLayer() {\n      return {\n        kmlLayer: kmlLayer\n      };\n    }, this.setKmlLayerCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.kmlLayer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$c,\n        eventMap: eventMap$c,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.kmlLayer\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.kmlLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.kmlLayer);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.kmlLayer.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return KmlLayer;\n}(PureComponent);\nKmlLayer.contextType = MapContext;\n\n/* eslint-disable filenames/match-regex */\nfunction getOffsetOverride(containerElement, getPixelPositionOffset) {\n  return typeof getPixelPositionOffset === 'function' ? getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight) : {};\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar createLatLng = function createLatLng(inst, Type) {\n  return new Type(inst.lat, inst.lng);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar createLatLngBounds = function createLatLngBounds(inst, Type) {\n  return new Type(new google.maps.LatLng(inst.ne.lat, inst.ne.lng), new google.maps.LatLng(inst.sw.lat, inst.sw.lng));\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar ensureOfType = function ensureOfType(inst, type, factory) {\n  return inst instanceof type ? inst : factory(inst, type);\n};\nvar getLayoutStylesByBounds = function getLayoutStylesByBounds(mapCanvasProjection, offset, bounds) {\n  var ne = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast());\n  var sw = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest());\n  if (ne && sw) {\n    return {\n      left: sw.x + offset.x + \"px\",\n      top: ne.y + offset.y + \"px\",\n      width: ne.x - sw.x - offset.x + \"px\",\n      height: sw.y - ne.y - offset.y + \"px\"\n    };\n  }\n  return {\n    left: '-9999px',\n    top: '-9999px'\n  };\n};\nvar getLayoutStylesByPosition = function getLayoutStylesByPosition(mapCanvasProjection, offset, position) {\n  var point = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(position);\n  if (point) {\n    var x = point.x,\n      y = point.y;\n    return {\n      left: x + offset.x + \"px\",\n      top: y + offset.y + \"px\"\n    };\n  }\n  return {\n    left: '-9999px',\n    top: '-9999px'\n  };\n};\nvar getLayoutStyles = function getLayoutStyles(mapCanvasProjection, offset, bounds, position) {\n  return bounds !== undefined ? getLayoutStylesByBounds(mapCanvasProjection, offset, ensureOfType(bounds, google.maps.LatLngBounds, createLatLngBounds)) : getLayoutStylesByPosition(mapCanvasProjection, offset, ensureOfType(position, google.maps.LatLng, createLatLng));\n};\nvar arePositionsEqual = function arePositionsEqual(currentPosition, previousPosition) {\n  return currentPosition.left === previousPosition.left && currentPosition.top === previousPosition.top && currentPosition.width === previousPosition.height && currentPosition.height === previousPosition.height;\n};\nfunction convertToLatLngString(latLngLike) {\n  if (!latLngLike) {\n    return '';\n  }\n  var latLng = latLngLike instanceof google.maps.LatLng ? latLngLike : new google.maps.LatLng(latLngLike.lat, latLngLike.lng);\n  return latLng + '';\n}\nfunction convertToLatLngBoundsString(latLngBoundsLike) {\n  if (!latLngBoundsLike) {\n    return '';\n  }\n  var latLngBounds = latLngBoundsLike instanceof google.maps.LatLngBounds ? latLngBoundsLike : new google.maps.LatLngBounds(new google.maps.LatLng(latLngBoundsLike.south, latLngBoundsLike.east), new google.maps.LatLng(latLngBoundsLike.north, latLngBoundsLike.west));\n  return latLngBounds + '';\n}\nvar OverlayView = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(OverlayView, _React$PureComponent);\n  function OverlayView(props) {\n    var _this;\n    _this = _React$PureComponent.call(this, props) || this;\n    _this.state = {\n      paneEl: null,\n      containerStyle: {\n        // set initial position\n        position: 'absolute'\n      }\n    };\n    _this.updatePane = function () {\n      var mapPaneName = _this.props.mapPaneName; // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n\n      var mapPanes = _this.overlayView.getPanes();\n      !!!mapPaneName ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"OverlayView requires props.mapPaneName but got %s\", mapPaneName) : invariant(false) : void 0;\n      if (mapPanes) {\n        _this.setState({\n          paneEl: mapPanes[mapPaneName]\n        });\n      } else {\n        _this.setState({\n          paneEl: null\n        });\n      }\n    };\n    _this.onAdd = function () {\n      _this.updatePane();\n      _this.props.onLoad == null ? void 0 : _this.props.onLoad(_this.overlayView);\n    };\n    _this.onPositionElement = function () {\n      var mapCanvasProjection = _this.overlayView.getProjection();\n      var offset = _extends({\n        x: 0,\n        y: 0\n      }, _this.containerRef.current ? getOffsetOverride(_this.containerRef.current, _this.props.getPixelPositionOffset) : {});\n      var layoutStyles = getLayoutStyles(mapCanvasProjection, offset, _this.props.bounds, _this.props.position);\n      var _this$state$container = _this.state.containerStyle,\n        left = _this$state$container.left,\n        top = _this$state$container.top,\n        width = _this$state$container.width,\n        height = _this$state$container.height;\n      if (!arePositionsEqual(layoutStyles, {\n        left: left,\n        top: top,\n        width: width,\n        height: height\n      })) {\n        _this.setState({\n          containerStyle: _extends({}, layoutStyles, {\n            position: 'absolute'\n          })\n        });\n      }\n    };\n    _this.draw = function () {\n      _this.onPositionElement();\n    };\n    _this.onRemove = function () {\n      _this.setState(function () {\n        return {\n          paneEl: null\n        };\n      }); // this.mapPaneEl = null\n\n      _this.props.onUnmount == null ? void 0 : _this.props.onUnmount(_this.overlayView);\n    };\n    _this.containerRef = createRef(); // You must implement three methods: onAdd(), draw(), and onRemove().\n\n    var overlayView = new google.maps.OverlayView();\n    overlayView.onAdd = _this.onAdd;\n    overlayView.draw = _this.draw;\n    overlayView.onRemove = _this.onRemove;\n    _this.overlayView = overlayView;\n    return _this;\n  }\n  var _proto = OverlayView.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n    this.overlayView.setMap(this.context);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevPositionString = convertToLatLngString(prevProps.position);\n    var positionString = convertToLatLngString(this.props.position);\n    var prevBoundsString = convertToLatLngBoundsString(prevProps.bounds);\n    var boundsString = convertToLatLngBoundsString(this.props.bounds);\n    if (prevPositionString !== positionString || prevBoundsString !== boundsString) {\n      this.overlayView.draw();\n    }\n    if (prevProps.mapPaneName !== this.props.mapPaneName) {\n      this.updatePane();\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.overlayView.setMap(null);\n  };\n  _proto.render = function render() {\n    var paneEl = this.state.paneEl;\n    if (paneEl) {\n      return createPortal(createElement(\"div\", {\n        ref: this.containerRef,\n        style: this.state.containerStyle\n      }, Children.only(this.props.children)), paneEl);\n    } else {\n      return null;\n    }\n  };\n  return OverlayView;\n}(PureComponent);\nOverlayView.FLOAT_PANE = \"floatPane\";\nOverlayView.MAP_PANE = \"mapPane\";\nOverlayView.MARKER_LAYER = \"markerLayer\";\nOverlayView.OVERLAY_LAYER = \"overlayLayer\";\nOverlayView.OVERLAY_MOUSE_TARGET = \"overlayMouseTarget\";\nOverlayView.contextType = MapContext;\nfunction noop() {}\nvar eventMap$d = {\n  onDblClick: 'dblclick',\n  onClick: 'click'\n};\nvar updaterMap$d = {\n  opacity: function opacity(instance, _opacity) {\n    instance.setOpacity(_opacity);\n  }\n};\nvar GroundOverlay = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(GroundOverlay, _React$PureComponent);\n  function GroundOverlay() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      groundOverlay: null\n    };\n    _this.setGroundOverlayCallback = function () {\n      if (_this.state.groundOverlay !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.groundOverlay);\n      }\n    };\n    return _this;\n  }\n  var _proto = GroundOverlay.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    !(!!this.props.url || !!this.props.bounds) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655\") : invariant(false) : void 0;\n    var groundOverlay = new google.maps.GroundOverlay(this.props.url, this.props.bounds, _extends({}, this.props.options, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$d,\n      eventMap: eventMap$d,\n      prevProps: {},\n      nextProps: this.props,\n      instance: groundOverlay\n    });\n    this.setState(function setGroundOverlay() {\n      return {\n        groundOverlay: groundOverlay\n      };\n    }, this.setGroundOverlayCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.groundOverlay !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$d,\n        eventMap: eventMap$d,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.groundOverlay\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.groundOverlay) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.groundOverlay);\n      }\n      this.state.groundOverlay.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return GroundOverlay;\n}(PureComponent);\nGroundOverlay.defaultProps = {\n  onLoad: noop\n};\nGroundOverlay.contextType = MapContext;\nvar eventMap$e = {};\nvar updaterMap$e = {\n  data: function data(instance, _data) {\n    instance.setData(_data);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  }\n};\nvar HeatmapLayer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(HeatmapLayer, _React$PureComponent);\n  function HeatmapLayer() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      heatmapLayer: null\n    };\n    _this.setHeatmapLayerCallback = function () {\n      if (_this.state.heatmapLayer !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.heatmapLayer);\n      }\n    };\n    return _this;\n  }\n  var _proto = HeatmapLayer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    !!!google.maps.visualization ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Did you include prop libraries={[\"visualization\"]} to <LoadScript />? %s', google.maps.visualization) : invariant(false) : void 0;\n    !!!this.props.data ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'data property is required in HeatmapLayer %s', this.props.data) : invariant(false) : void 0;\n    var heatmapLayer = new google.maps.visualization.HeatmapLayer(_extends({}, this.props.options || {}, {\n      data: this.props.data,\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$e,\n      eventMap: eventMap$e,\n      prevProps: {},\n      nextProps: this.props,\n      instance: heatmapLayer\n    });\n    this.setState(function setHeatmapLayer() {\n      return {\n        heatmapLayer: heatmapLayer\n      };\n    }, this.setHeatmapLayerCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    unregisterEvents(this.registeredEvents);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$e,\n      eventMap: eventMap$e,\n      prevProps: prevProps,\n      nextProps: this.props,\n      instance: this.state.heatmapLayer\n    });\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.heatmapLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.heatmapLayer);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.heatmapLayer.setMap(null);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return HeatmapLayer;\n}(PureComponent);\nHeatmapLayer.contextType = MapContext;\nvar eventMap$f = {\n  onCloseClick: 'closeclick',\n  onPanoChanged: 'pano_changed',\n  onPositionChanged: 'position_changed',\n  onPovChanged: 'pov_changed',\n  onResize: 'resize',\n  onStatusChanged: 'status_changed',\n  onVisibleChanged: 'visible_changed',\n  onZoomChanged: 'zoom_changed'\n};\nvar updaterMap$f = {\n  register: function register(instance, provider, options) {\n    instance.registerPanoProvider(provider, options);\n  },\n  links: function links(instance, _links) {\n    instance.setLinks(_links);\n  },\n  motionTracking: function motionTracking(instance, _motionTracking) {\n    instance.setMotionTracking(_motionTracking);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  pano: function pano(instance, _pano) {\n    instance.setPano(_pano);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  pov: function pov(instance, _pov) {\n    instance.setPov(_pov);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zoom: function zoom(instance, _zoom) {\n    instance.setZoom(_zoom);\n  }\n};\nvar StreetViewPanorama = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StreetViewPanorama, _React$PureComponent);\n  function StreetViewPanorama() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      streetViewPanorama: null\n    };\n    _this.setStreetViewPanoramaCallback = function () {\n      if (_this.state.streetViewPanorama !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.streetViewPanorama);\n      }\n    };\n    return _this;\n  }\n  var _proto = StreetViewPanorama.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var streetViewPanorama = this.context.getStreetView();\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$f,\n      eventMap: eventMap$f,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama\n    });\n    this.setState(function setStreetViewPanorama() {\n      return {\n        streetViewPanorama: streetViewPanorama\n      };\n    }, this.setStreetViewPanoramaCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.streetViewPanorama !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$f,\n        eventMap: eventMap$f,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama);\n      }\n      unregisterEvents(this.registeredEvents);\n      this.state.streetViewPanorama.setVisible(false);\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return StreetViewPanorama;\n}(PureComponent);\nStreetViewPanorama.contextType = MapContext;\nvar StreetViewService = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StreetViewService, _React$PureComponent);\n  function StreetViewService() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      streetViewService: null\n    };\n    _this.setStreetViewServiceCallback = function () {\n      if (_this.state.streetViewService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.streetViewService);\n      }\n    };\n    return _this;\n  }\n  var _proto = StreetViewService.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var streetViewService = new google.maps.StreetViewService();\n    this.setState(function setStreetViewService() {\n      return {\n        streetViewService: streetViewService\n      };\n    }, this.setStreetViewServiceCallback);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.streetViewService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewService);\n      }\n    }\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return StreetViewService;\n}(PureComponent);\nStreetViewService.contextType = MapContext;\nvar DirectionsService = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DirectionsService, _React$PureComponent);\n  function DirectionsService() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      directionsService: null\n    };\n    _this.setDirectionsServiceCallback = function () {\n      if (_this.state.directionsService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.directionsService);\n      }\n    };\n    return _this;\n  }\n  var _proto = DirectionsService.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    !!!this.props.options ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DirectionsService expected options object as parameter, but got %s', this.props.options) : invariant(false) : void 0;\n    var directionsService = new google.maps.DirectionsService();\n    this.setState(function setDirectionsService() {\n      return {\n        directionsService: directionsService\n      };\n    }, this.setDirectionsServiceCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService);\n      }\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return DirectionsService;\n}(PureComponent);\nvar eventMap$g = {\n  onDirectionsChanged: 'directions_changed'\n};\nvar updaterMap$g = {\n  directions: function directions(instance, _directions) {\n    instance.setDirections(_directions);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  panel: function panel(instance, _panel) {\n    instance.setPanel(_panel);\n  },\n  routeIndex: function routeIndex(instance, _routeIndex) {\n    instance.setRouteIndex(_routeIndex);\n  }\n};\nvar DirectionsRenderer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DirectionsRenderer, _React$PureComponent);\n  function DirectionsRenderer() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      directionsRenderer: null\n    };\n    _this.setDirectionsRendererCallback = function () {\n      if (_this.state.directionsRenderer !== null) {\n        _this.state.directionsRenderer.setMap(_this.context);\n        if (_this.props.onLoad) {\n          _this.props.onLoad(_this.state.directionsRenderer);\n        }\n      }\n    };\n    return _this;\n  }\n  var _proto = DirectionsRenderer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var directionsRenderer = new google.maps.DirectionsRenderer(this.props.options);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$g,\n      eventMap: eventMap$g,\n      prevProps: {},\n      nextProps: this.props,\n      instance: directionsRenderer\n    });\n    this.setState(function setDirectionsRenderer() {\n      return {\n        directionsRenderer: directionsRenderer\n      };\n    }, this.setDirectionsRendererCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.directionsRenderer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$g,\n        eventMap: eventMap$g,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.directionsRenderer\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.directionsRenderer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsRenderer);\n      }\n      unregisterEvents(this.registeredEvents);\n      if (this.state.directionsRenderer) {\n        this.state.directionsRenderer.setMap(null);\n      }\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return DirectionsRenderer;\n}(PureComponent);\nDirectionsRenderer.contextType = MapContext;\nvar DistanceMatrixService = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DistanceMatrixService, _React$PureComponent);\n  function DistanceMatrixService() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      distanceMatrixService: null\n    };\n    _this.setDistanceMatrixServiceCallback = function () {\n      if (_this.state.distanceMatrixService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.distanceMatrixService);\n      }\n    };\n    return _this;\n  }\n  var _proto = DistanceMatrixService.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    !!!this.props.options ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DistanceMatrixService expected options object as parameter, but go %s', this.props.options) : invariant(false) : void 0;\n    var distanceMatrixService = new google.maps.DistanceMatrixService();\n    this.setState(function setDistanceMatrixService() {\n      return {\n        distanceMatrixService: distanceMatrixService\n      };\n    }, this.setDistanceMatrixServiceCallback);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.state.distanceMatrixService !== null) {\n      this.state.distanceMatrixService.getDistanceMatrix(this.props.options, this.props.callback);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.distanceMatrixService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.distanceMatrixService);\n      }\n    }\n  };\n  _proto.render = function render() {\n    return createElement(Fragment, null);\n  };\n  return DistanceMatrixService;\n}(PureComponent);\nvar eventMap$h = {\n  onPlacesChanged: 'places_changed'\n};\nvar updaterMap$h = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  }\n};\nvar StandaloneSearchBox = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StandaloneSearchBox, _React$PureComponent);\n  function StandaloneSearchBox() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = createRef();\n    _this.state = {\n      searchBox: null\n    };\n    _this.setSearchBoxCallback = function () {\n      if (_this.state.searchBox !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.searchBox);\n      }\n    };\n    return _this;\n  }\n  var _proto = StandaloneSearchBox.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    !!!google.maps.places ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s', google.maps.places) : invariant(false) : void 0;\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      var input = this.containerElement.current.querySelector('input');\n      if (input !== null) {\n        var searchBox = new google.maps.places.SearchBox(input, this.props.options);\n        this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n          updaterMap: updaterMap$h,\n          eventMap: eventMap$h,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox\n        });\n        this.setState(function setSearchBox() {\n          return {\n            searchBox: searchBox\n          };\n        }, this.setSearchBoxCallback);\n      }\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.searchBox !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$h,\n        eventMap: eventMap$h,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox\n      });\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox);\n      }\n      unregisterEvents(this.registeredEvents);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(\"div\", {\n      ref: this.containerElement\n    }, Children.only(this.props.children));\n  };\n  return StandaloneSearchBox;\n}(PureComponent);\nStandaloneSearchBox.contextType = MapContext;\nvar eventMap$i = {\n  onPlaceChanged: 'place_changed'\n};\nvar updaterMap$i = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  },\n  restrictions: function restrictions(instance, _restrictions) {\n    instance.setComponentRestrictions(_restrictions);\n  },\n  fields: function fields(instance, _fields) {\n    instance.setFields(_fields);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  types: function types(instance, _types) {\n    instance.setTypes(_types);\n  }\n};\nvar Autocomplete = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Autocomplete, _React$PureComponent);\n  function Autocomplete() {\n    var _this;\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = createRef();\n    _this.state = {\n      autocomplete: null\n    };\n    _this.setAutocompleteCallback = function () {\n      if (_this.state.autocomplete !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.autocomplete);\n      }\n    };\n    return _this;\n  }\n  var _proto = Autocomplete.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    !!!google.maps.places ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s', google.maps.places) : invariant(false) : void 0; // TODO: why current could be equal null?\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    var input = this.containerElement.current.querySelector('input');\n    if (input) {\n      var autocomplete = new google.maps.places.Autocomplete(input, this.props.options);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$i,\n        eventMap: eventMap$i,\n        prevProps: {},\n        nextProps: this.props,\n        instance: autocomplete\n      });\n      this.setState(function setAutocomplete() {\n        return {\n          autocomplete: autocomplete\n        };\n      }, this.setAutocompleteCallback);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    unregisterEvents(this.registeredEvents);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$i,\n      eventMap: eventMap$i,\n      prevProps: prevProps,\n      nextProps: this.props,\n      instance: this.state.autocomplete\n    });\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.autocomplete !== null) {\n      unregisterEvents(this.registeredEvents);\n    }\n  };\n  _proto.render = function render() {\n    return createElement(\"div\", {\n      ref: this.containerElement,\n      className: this.props.className || ''\n    }, Children.only(this.props.children));\n  };\n  return Autocomplete;\n}(PureComponent);\nAutocomplete.contextType = MapContext;\nexport { Autocomplete, BicyclingLayer, Circle, Data, DirectionsRenderer, DirectionsService, DistanceMatrixService, DrawingManager, GoogleMap, GroundOverlay, HeatmapLayer, InfoBoxComponent as InfoBox, InfoWindow, KmlLayer, LoadScript, LoadScriptNext$1 as LoadScriptNext, MapContext, Marker, ClustererComponent as MarkerClusterer, OverlayView, Polygon, Polyline, Rectangle, StandaloneSearchBox, StreetViewPanorama, StreetViewService, TrafficLayer, TransitLayer, useGoogleMap, useJsApiLoader, useLoadScript };","map":{"version":3,"names":["MapContext","createContext","useGoogleMap","useContext","process","env","NODE_ENV","invariant","map","reduce","obj","fn","acc","Object","keys","reducer","newAcc","key","forEach","iterator","applyUpdaterToNextProps","updaterMap","prevProps","nextProps","instance","iter","nextValue","registerEvents","props","eventMap","registeredList","googleEventName","onEventName","push","google","maps","event","addListener","unregisterEvent","registered","removeListener","unregisterEvents","events","applyUpdatersToPropsAndRegisterEvents","_ref","registeredEvents","onDblClick","onDragEnd","onDragStart","onMapTypeIdChanged","onMouseMove","onMouseOut","onMouseOver","onMouseDown","onMouseUp","onRightClick","onTilesLoaded","onBoundsChanged","onCenterChanged","onClick","onDrag","onHeadingChanged","onIdle","onProjectionChanged","onResize","onTiltChanged","onZoomChanged","extraMapTypes","extra","forEachExtra","it","i","mapTypes","set","String","center","_center","setCenter","clickableIcons","clickable","setClickableIcons","heading","_heading","setHeading","mapTypeId","_mapTypeId","setMapTypeId","options","_options","setOptions","streetView","_streetView","setStreetView","tilt","_tilt","setTilt","zoom","_zoom","setZoom","GoogleMap","_React$PureComponent","_inheritsLoose","_this","state","mapRef","getInstance","Map","panTo","latLng","setMapCallback","onLoad","getRef","ref","_proto","prototype","componentDidMount","setState","setMap","componentDidUpdate","componentWillUnmount","onUnmount","render","createElement","id","style","mapContainerStyle","className","mapContainerClassName","Provider","value","children","Fragment","PureComponent","runtime","exports","Op","hasOwn","hasOwnProperty","undefined$1","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","next","done","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","object","reverse","length","pop","iterable","iteratorMethod","isNaN","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","isBrowser","document","injectScript","url","nonce","injectScriptCallback","existingScript","getElementById","windowWithGoogleMap","window","dataStateAttribute","getAttribute","src","originalInitMap","initMap","originalErrorCallback","onerror","remove","script","setAttribute","onload","head","appendChild","console","isRobotoStyle","element","href","indexOf","tagName","toLowerCase","styleSheet","cssText","replace","innerHTML","preventGoogleFonts","getElementsByTagName","trueInsertBefore","insertBefore","bind","newElement","referenceElement","Reflect","apply","trueAppend","textNode","makeLoadScriptUrl","googleMapsApiKey","googleMapsClientId","version","_ref$version","language","region","libraries","channel","mapIds","params","sort","join","cleaningUp","DefaultLoadingElement","defaultLoadScriptProps","LoadScript","check","createRef","loaded","cleanupCallback","isCleaningUp","_asyncToGenerator","runtime_1","_callee","promiseCallback","_callee$","_context","_promiseCallback","timer","setInterval","interval","clearInterval","cleanup","parentNode","removeChild","Array","filter","includes","link","innerText","undefined","preventGoogleFontsLoading","injectScriptOptions","setLoaded","onError","warn","timeoutCallback","_this2","current","setTimeout","loadingElement","defaultProps","previouslyLoadedUrl","useLoadScript","_ref$id","isMounted","useRef","useState","isLoaded","_React$useState","loadError","_React$useState2","setLoadError","useEffect","trackMountedState","applyPreventGoogleFonts","validateLoadedState","loadScriptAndModifyLoadedState","setLoadedIfMounted","handleInjectError","prevLibraries","checkPerformance","defaultLoadingElement","LoadScriptNext","hookOptions","_objectWithoutPropertiesLoose","_useLoadScript","handleOnLoad","handleOnError","handleOnUnmount","LoadScriptNext$1","memo","useJsApiLoader","loader","useMemo","Loader","apiKey","effect","load","onrejected","eventMap$1","updaterMap$1","TrafficLayer","_PureComponent","trafficLayer","setTrafficLayerCallback","_extends","setTrafficLayer","contextType","BicyclingLayer","bicyclingLayer","setBicyclingLayerCallback","setBicyclingLayer","TransitLayer","transitLayer","setTransitLayerCallback","setTransitLayer","eventMap$2","onCircleComplete","onMarkerComplete","onOverlayComplete","onPolygonComplete","onPolylineComplete","onRectangleComplete","updaterMap$2","drawingMode","_drawingMode","setDrawingMode","DrawingManager","drawingManager","setDrawingManagerCallback","drawing","setDrawingManager","eventMap$3","onAnimationChanged","onClickableChanged","onCursorChanged","onDraggableChanged","onFlatChanged","onIconChanged","onPositionChanged","onShapeChanged","onTitleChanged","onVisibleChanged","onZindexChanged","updaterMap$3","animation","_animation","setAnimation","_clickable","setClickable","cursor","_cursor","setCursor","draggable","_draggable","setDraggable","icon","_icon","setIcon","label","_label","setLabel","_map","opacity","_opacity","setOpacity","position","_position","setPosition","shape","_shape","setShape","title","_title","setTitle","visible","_visible","setVisible","zIndex","_zIndex","setZIndex","Marker","markerOptions","clusterer","marker","addMarker","noClustererRedraw","removeMarker","Children","child","isValidElement","elementChild","cloneElement","anchor","eventMap$4","onClusteringBegin","onClusteringEnd","updaterMap$4","averageCenter","_averageCenter","setAverageCenter","batchSizeIE","_batchSizeIE","setBatchSizeIE","calculator","_calculator","setCalculator","clusterClass","_clusterClass","setClusterClass","enableRetinaIcons","_enableRetinaIcons","setEnableRetinaIcons","gridSize","_gridSize","setGridSize","ignoreHidden","_ignoreHidden","setIgnoreHidden","imageExtension","_imageExtension","setImageExtension","imagePath","_imagePath","setImagePath","imageSizes","_imageSizes","setImageSizes","maxZoom","_maxZoom","setMaxZoom","minimumClusterSize","_minimumClusterSize","setMinimumClusterSize","styles","_styles","setStyles","zoomOnClick","_zoomOnClick","setZoomOnClick","ClustererComponent","markerClusterer","setClustererCallback","Clusterer","setClusterer","eventMap$5","onCloseClick","onContentChanged","onDomReady","updaterMap$5","LatLng","lat","lng","InfoBoxComponent","containerElement","infoBox","open","getPosition","setInfoBoxCallback","_this$props","setContent","infoBoxOptions","positionLatLng","InfoBox","close","createPortal","only","eventMap$6","updaterMap$6","InfoWindow","infoWindow","setInfoWindowCallback","setInfoWindow","eventMap$7","updaterMap$7","editable","_editable","setEditable","path","_path","setPath","Polyline","polyline","setPolylineCallback","setPolyline","eventMap$8","updaterMap$8","paths","_paths","setPaths","Polygon","polygon","setPolygonCallback","setPolygon","eventMap$9","updaterMap$9","bounds","_bounds","setBounds","Rectangle","rectangle","setRectangleCallback","setRectangle","eventMap$a","onRadiusChanged","updaterMap$a","radius","_radius","setRadius","Circle","circle","setCircleCallback","setCircle","eventMap$b","onAddFeature","onRemoveFeature","onRemoveProperty","onSetGeometry","onSetProperty","updaterMap$b","add","features","addgeojson","geojson","addGeoJson","contains","feature","foreach","callback","loadgeojson","loadGeoJson","overridestyle","overrideStyle","revertstyle","revertStyle","controlposition","controlPosition","setControlPosition","controls","_controls","setControls","drawingmode","mode","_style","setStyle","togeojson","toGeoJson","Data","data","setDataCallback","setData","eventMap$c","onDefaultViewportChanged","onStatusChanged","updaterMap$c","_url","setUrl","KmlLayer","kmlLayer","setKmlLayerCallback","setLmlLayer","getOffsetOverride","getPixelPositionOffset","offsetWidth","offsetHeight","createLatLng","inst","Type","createLatLngBounds","ne","sw","ensureOfType","factory","getLayoutStylesByBounds","mapCanvasProjection","offset","fromLatLngToDivPixel","getNorthEast","getSouthWest","left","x","top","y","width","height","getLayoutStylesByPosition","point","getLayoutStyles","LatLngBounds","arePositionsEqual","currentPosition","previousPosition","convertToLatLngString","latLngLike","convertToLatLngBoundsString","latLngBoundsLike","latLngBounds","south","east","north","west","OverlayView","paneEl","containerStyle","updatePane","mapPaneName","mapPanes","overlayView","getPanes","onAdd","onPositionElement","getProjection","containerRef","layoutStyles","_this$state$container","draw","onRemove","prevPositionString","positionString","prevBoundsString","boundsString","FLOAT_PANE","MAP_PANE","MARKER_LAYER","OVERLAY_LAYER","OVERLAY_MOUSE_TARGET","noop","eventMap$d","updaterMap$d","GroundOverlay","groundOverlay","setGroundOverlayCallback","setGroundOverlay","eventMap$e","updaterMap$e","_data","HeatmapLayer","heatmapLayer","setHeatmapLayerCallback","visualization","setHeatmapLayer","eventMap$f","onPanoChanged","onPovChanged","updaterMap$f","register","provider","registerPanoProvider","links","_links","setLinks","motionTracking","_motionTracking","setMotionTracking","pano","_pano","setPano","pov","_pov","setPov","StreetViewPanorama","streetViewPanorama","setStreetViewPanoramaCallback","getStreetView","setStreetViewPanorama","StreetViewService","streetViewService","setStreetViewServiceCallback","setStreetViewService","DirectionsService","directionsService","setDirectionsServiceCallback","setDirectionsService","route","eventMap$g","onDirectionsChanged","updaterMap$g","directions","_directions","setDirections","panel","_panel","setPanel","routeIndex","_routeIndex","setRouteIndex","DirectionsRenderer","directionsRenderer","setDirectionsRendererCallback","setDirectionsRenderer","DistanceMatrixService","distanceMatrixService","setDistanceMatrixServiceCallback","setDistanceMatrixService","getDistanceMatrix","eventMap$h","onPlacesChanged","updaterMap$h","StandaloneSearchBox","searchBox","setSearchBoxCallback","places","input","querySelector","SearchBox","setSearchBox","eventMap$i","onPlaceChanged","updaterMap$i","restrictions","_restrictions","setComponentRestrictions","fields","_fields","setFields","types","_types","setTypes","Autocomplete","autocomplete","setAutocompleteCallback","setAutocomplete"],"sources":["../src/map-context.ts","../src/utils/reduce.ts","../src/utils/foreach.ts","../src/utils/helper.ts","../src/GoogleMap.tsx","../node_modules/regenerator-runtime/runtime.js","../src/utils/isbrowser.ts","../src/utils/injectscript.ts","../src/utils/prevent-google-fonts.ts","../src/utils/make-load-script-url.ts","../src/LoadScript.tsx","../src/useLoadScript.tsx","../src/LoadScriptNext.tsx","../src/useJsApiLoader.tsx","../src/components/maps/TrafficLayer.tsx","../src/components/maps/BicyclingLayer.tsx","../src/components/maps/TransitLayer.tsx","../src/components/drawing/DrawingManager.tsx","../src/components/drawing/Marker.tsx","../src/components/addons/MarkerClusterer.tsx","../src/components/addons/InfoBox.tsx","../src/components/drawing/InfoWindow.tsx","../src/components/drawing/Polyline.tsx","../src/components/drawing/Polygon.tsx","../src/components/drawing/Rectangle.tsx","../src/components/drawing/Circle.tsx","../src/components/drawing/Data.tsx","../src/components/kml/KmlLayer.tsx","../src/components/dom/dom-helper.ts","../src/components/dom/OverlayView.tsx","../src/utils/noop.ts","../src/components/overlays/GroundOverlay.tsx","../src/components/heatmap/HeatmapLayer.tsx","../src/components/streetview/StreetViewPanorama.tsx","../src/components/streetview/StreetViewService.tsx","../src/components/directions/DirectionsService.tsx","../src/components/directions/DirectionsRenderer.tsx","../src/components/distance-matrix/DistanceMatrixService.tsx","../src/components/places/StandaloneSearchBox.tsx","../src/components/places/Autocomplete.tsx"],"sourcesContent":["import { useContext, createContext } from 'react'\nimport invariant from 'invariant'\n\nconst MapContext = createContext<google.maps.Map | null>(null)\n\nexport function useGoogleMap(): google.maps.Map | null {\n  invariant(!!useContext, 'useGoogleMap is React hook and requires React version 16.8+')\n\n  const map = useContext(MapContext)\n\n  invariant(!!map, 'useGoogleMap needs a GoogleMap available up in the tree')\n\n  return map\n}\n\nexport default MapContext\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const reduce = (obj: any, fn: any, acc: any): any => {\n  return Object.keys(obj).reduce(function reducer(newAcc, key) {\n    return fn(newAcc, obj[key], key)\n  }, acc)\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forEach(obj: any, fn: any): any {\n  Object.keys(obj).forEach(function iterator(key) {\n    return fn(obj[key], key)\n  })\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { reduce } from './reduce'\nimport { forEach } from './foreach'\n\nexport const applyUpdaterToNextProps = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updaterMap: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  prevProps: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  nextProps: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const map: any = {}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const iter = (fn: any, key: string): void => {\n    const nextValue = nextProps[key]\n\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue\n      fn(instance, nextValue)\n    }\n  }\n\n  forEach(updaterMap, iter)\n\n  return map\n}\n\nexport function registerEvents(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any,\n  eventMap: Record<string, string>\n): google.maps.MapsEventListener[] {\n  const registeredList = reduce(\n    eventMap,\n    function reducer(\n      acc: google.maps.MapsEventListener[],\n      googleEventName: string,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onEventName: any\n    ): google.maps.MapsEventListener[] {\n      if (typeof props[onEventName] === 'function') {\n        acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]))\n      }\n\n      return acc\n    },\n    []\n  )\n\n  return registeredList\n}\nfunction unregisterEvent(registered: google.maps.MapsEventListener): void {\n  google.maps.event.removeListener(registered)\n}\n\nexport function unregisterEvents(events: google.maps.MapsEventListener[] = []): void {\n  events.forEach(unregisterEvent)\n}\n\nexport function applyUpdatersToPropsAndRegisterEvents({\n  updaterMap,\n  eventMap,\n  prevProps,\n  nextProps,\n  instance,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updaterMap: any\n  eventMap: Record<string, string>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  prevProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  nextProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any\n}): google.maps.MapsEventListener[] {\n  const registeredEvents = registerEvents(nextProps, instance, eventMap)\n  applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance)\n  return registeredEvents\n}\n","import * as React from 'react'\n\nimport MapContext from './map-context'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from './utils/helper'\n\nconst eventMap = {\n  onDblClick: 'dblclick',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseDown: 'mousedown',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n  onTilesLoaded: 'tilesloaded',\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDrag: 'drag',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onProjectionChanged: 'projection_changed',\n  onResize: 'resize',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n}\n\nconst updaterMap = {\n  extraMapTypes(map: google.maps.Map, extra: google.maps.MapType[]): void {\n    extra.forEach(function forEachExtra(it, i) {\n      map.mapTypes.set(String(i), it)\n    })\n  },\n  center(map: google.maps.Map, center: google.maps.LatLng | google.maps.LatLngLiteral): void {\n    map.setCenter(center)\n  },\n  clickableIcons(map: google.maps.Map, clickable: boolean): void {\n    map.setClickableIcons(clickable)\n  },\n  heading(map: google.maps.Map, heading: number): void {\n    map.setHeading(heading)\n  },\n  mapTypeId(map: google.maps.Map, mapTypeId: string): void {\n    map.setMapTypeId(mapTypeId)\n  },\n  options(map: google.maps.Map, options: google.maps.MapOptions): void {\n    map.setOptions(options)\n  },\n  streetView(map: google.maps.Map, streetView: google.maps.StreetViewPanorama): void {\n    map.setStreetView(streetView)\n  },\n  tilt(map: google.maps.Map, tilt: number): void {\n    map.setTilt(tilt)\n  },\n  zoom(map: google.maps.Map, zoom: number): void {\n    map.setZoom(zoom)\n  },\n}\n\ninterface GoogleMapState {\n  map: google.maps.Map | null\n}\n\nexport interface GoogleMapProps {\n  children?: React.ReactNode\n  id?: string\n  mapContainerStyle?: React.CSSProperties\n  mapContainerClassName?: string\n  options?: google.maps.MapOptions\n  /** Additional map types to overlay. Overlay map types will display on top of the base map they are attached to, in the order in which they appear in the overlayMapTypes array (overlays with higher index values are displayed in front of overlays with lower index values). */\n  extraMapTypes?: google.maps.MapType[]\n  /** The initial Map center. */\n  center?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** When false, map icons are not clickable. A map icon represents a point of interest, also known as a POI. By default map icons are clickable. */\n  clickableIcons?: boolean\n  /** The heading for aerial imagery in degrees measured clockwise from cardinal direction North. Headings are snapped to the nearest available angle for which imagery is available. */\n  heading?: number\n  /** The initial Map mapTypeId. Defaults to ROADMAP. */\n  mapTypeId?: string\n  /** A StreetViewPanorama to display when the Street View pegman is dropped on the map. If no panorama is specified, a default StreetViewPanorama will be displayed in the map's div when the pegman is dropped. */\n  streetView?: google.maps.StreetViewPanorama\n  /** Controls the automatic switching behavior for the angle of incidence of the map. The only allowed values are 0 and 45. The value 0 causes the map to always use a 0° overhead view regardless of the zoom level and viewport. The value 45 causes the tilt angle to automatically switch to 45 whenever 45° imagery is available for the current zoom level and viewport, and switch back to 0 whenever 45° imagery is not available (this is the default behavior). 45° imagery is only available for satellite and hybrid map types, within some locations, and at some zoom levels. Note: getTilt returns the current tilt angle, not the value specified by this option. Because getTilt and this option refer to different things, do not bind() the tilt property; doing so may yield unpredictable effects. */\n  tilt?: number\n  /** The initial Map zoom level. Required. Valid values: Integers between zero, and up to the supported maximum zoom level. */\n  zoom?: number\n  /** This event is fired when the user clicks on the map. An ApiMouseEvent with properties for the clicked location is returned unless a place icon was clicked, in which case an IconMouseEvent with a placeId is returned. IconMouseEvent and ApiMouseEvent are identical, except that IconMouseEvent has the placeId field. The event can always be treated as an ApiMouseEvent when the placeId is not important. The click event is not fired if a Marker or InfoWindow was clicked. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user double-clicks on the map. Note that the click event will also fire, right before this one. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the map. */\n  onDrag?: () => void\n  /** This event is fired when the user stops dragging the map. */\n  onDragEnd?: () => void\n  /** This event is fired when the user starts dragging the map. */\n  onDragStart?: () => void\n  /** This event is fired when the mapTypeId property changes. */\n  onMapTypeIdChanged?: () => void\n  /** This event is fired whenever the user's mouse moves over the map container. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user's mouse exits the map container. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user's mouse enters the map container. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM contextmenu event is fired on the map container. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the visible tiles have finished loading. */\n  onTilesLoaded?: () => void\n  /** This event is fired when the viewport bounds have changed. */\n  onBoundsChanged?: () => void\n  /** This event is fired when the map center property changes. */\n  onCenterChanged?: () => void\n  /** This event is fired when the map heading property changes. */\n  onHeadingChanged?: () => void\n  /** This event is fired when the map becomes idle after panning or zooming. */\n  onIdle?: () => void\n  /** This event is fired when the projection has changed. */\n  onProjectionChanged?: () => void\n  /** This event is fired when the map size has changed. */\n  onResize?: () => void\n  /** This event is fired when the map tilt property changes. */\n  onTiltChanged?: () => void\n  /** This event is fired when the map zoom property changes. */\n  onZoomChanged?: () => void\n  /** This callback is called when the map instance has loaded. It is called with the map instance. */\n  onLoad?: (map: google.maps.Map) => void | Promise<void>\n  /** This callback is called when the component unmounts. It is called with the map instance. */\n  onUnmount?: (map: google.maps.Map) => void | Promise<void>\n}\n\n// function GoogleMapFunctional({ children, options, id, mapContainerStyle, center, clickableIcons, extraMapTypes, heading, mapContainerClassName, mapTypeId, onBoundsChanged, onCenterChanged, onClick, onDblClick, onDrag, onDragEnd, onDragStart, onHeadingChanged, onIdle, onProjectionChanged, onResize, onTiltChanged, onLoad }: GoogleMapProps): JSX.Element {\n//   const [map, setMap] = React.useState<google.maps.Map | null>(null)\n//   const ref = React.useRef<HTMLDivElement | null>(null)\n\n//   const getInstance = React.useCallback(() => {\n//     if (ref.current === null) {\n//       return null\n//     }\n\n//     return new google.maps.Map(ref.current, options)\n//   }, [options])\n\n//   React.useEffect(() => {\n\n//   }, [])\n\n//   const panTo = React.useCallback((latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n//     const map = getInstance()\n//     if (map) {\n//       map.panTo(latLng)\n//     }\n//   }, [])\n\n//   React.useEffect(() => {\n//     const map = getInstance()\n\n\n\n//   }, [])\n\n//   return (\n//     <div\n//         id={id}\n//         ref={ref}\n//         style={mapContainerStyle}\n//         className={mapContainerClassName}\n//       >\n//         <MapContext.Provider value={map}>\n//           {map !== null ? children : <></>}\n//         </MapContext.Provider>\n//       </div>\n//   )\n// }\n\nexport class GoogleMap extends React.PureComponent<GoogleMapProps, GoogleMapState> {\n  state: GoogleMapState = {\n    map: null,\n  }\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  mapRef: Element | null = null\n\n  getInstance = (): google.maps.Map | null => {\n    if (this.mapRef === null) {\n      return null\n    }\n\n    return new google.maps.Map(this.mapRef, this.props.options)\n  }\n\n  panTo = (latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n    const map = this.getInstance()\n    if (map) {\n      map.panTo(latLng)\n    }\n  }\n\n  setMapCallback = (): void => {\n    if (this.state.map !== null) {\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.map)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const map = this.getInstance()\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: map,\n    })\n\n    this.setState(function setMap() {\n      return {\n        map,\n      }\n    }, this.setMapCallback)\n  }\n\n  componentDidUpdate(prevProps: GoogleMapProps): void {\n    if (this.state.map !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.map,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.map !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.map)\n      }\n\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  getRef = (ref: HTMLDivElement | null): void => {\n    this.mapRef = ref\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div\n        id={this.props.id}\n        ref={this.getRef}\n        style={this.props.mapContainerStyle}\n        className={this.props.mapContainerClassName}\n      >\n        <MapContext.Provider value={this.state.map}>\n          {this.state.map !== null ? this.props.children : <></>}\n        </MapContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default GoogleMap\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const isBrowser: boolean = typeof document !== 'undefined'\n","import { isBrowser } from './isbrowser'\n\ninterface WindowWithGoogleMap extends Window {\n  initMap?: () => void\n}\n\ninterface InjectScriptArg {\n  url: string\n  id: string\n  nonce?: string\n}\n\nexport const injectScript = ({ url, id, nonce }: InjectScriptArg): Promise<any> => {\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'))\n  }\n\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    const existingScript = document.getElementById(id) as HTMLScriptElement | undefined\n    const windowWithGoogleMap: WindowWithGoogleMap = window\n    if (existingScript) {\n      // Same script id/url: keep same script\n      const dataStateAttribute = existingScript.getAttribute('data-state')\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id)\n        } else {\n          const originalInitMap = windowWithGoogleMap.initMap\n          const originalErrorCallback = existingScript.onerror\n\n          windowWithGoogleMap.initMap = function initMap(): void {\n            if (originalInitMap) {\n              originalInitMap()\n            }\n            resolve(id)\n          }\n\n          existingScript.onerror = function(err): void {\n            if (originalErrorCallback) {\n              originalErrorCallback(err)\n            }\n            reject(err)\n          }\n\n          return\n        }\n      }\n      // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n        existingScript.remove()\n      }\n    }\n\n    const script = document.createElement('script')\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.id = id\n    script.async = true\n    script.nonce = nonce\n    script.onerror = function onerror(err): void {\n      script.setAttribute('data-state', 'error')\n      reject(err)\n    }\n\n    windowWithGoogleMap.initMap = function onload(): void {\n      script.setAttribute('data-state', 'ready')\n      resolve(id)\n    }\n\n    document.head.appendChild(script)\n  }).catch(err => {\n    console.error('injectScript error: ', err)\n    throw err\n  })\n}\n","const isRobotoStyle = (element: HTMLElement): boolean => {\n  // roboto font download\n  if (\n    (element as HTMLLinkElement).href &&\n    (element as HTMLLinkElement).href.indexOf('https://fonts.googleapis.com/css?family=Roboto') ===\n      0\n  ) {\n    return true\n  }\n  // roboto style elements\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText.replace('\\r\\n', '').indexOf('.gm-style') === 0\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText = ''\n    return true\n  }\n  // roboto style elements for other browsers\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    element.innerHTML &&\n    element.innerHTML.replace('\\r\\n', '').indexOf('.gm-style') === 0\n  ) {\n    element.innerHTML = ''\n    return true\n  }\n  // when google tries to add empty style\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    !element.styleSheet &&\n    !element.innerHTML\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Preventing the Google Maps library from downloading an extra font\nexport const preventGoogleFonts = (): void => {\n  // we override these methods only for one particular head element\n  // default methods for other elements are not affected\n  const head = document.getElementsByTagName('head')[0]\n\n  const trueInsertBefore = head.insertBefore.bind(head)\n\n  // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  head.insertBefore = function insertBefore(\n    newElement: HTMLElement,\n    referenceElement: HTMLElement\n  ): void {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement])\n    }\n  }\n\n  const trueAppend = head.appendChild.bind(head)\n\n  // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  head.appendChild = function appendChild(textNode: HTMLElement): void {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode])\n    }\n  }\n}\n","import invariant from 'invariant'\n\nexport type Libraries = (\"drawing\" | \"geometry\" | \"localContext\" | \"places\" | \"visualization\")[]\n\nexport interface LoadScriptUrlOptions {\n  googleMapsApiKey: string | \"\"\n  googleMapsClientId?: string\n  version?: string\n  language?: string\n  region?: string\n  libraries?: Libraries\n  channel?: string\n  mapIds?: string[]\n}\n\nexport function makeLoadScriptUrl({\n  googleMapsApiKey,\n  googleMapsClientId,\n  version = 'weekly',\n  language,\n  region,\n  libraries,\n  channel,\n  mapIds\n}: LoadScriptUrlOptions): string {\n  const params = []\n\n  invariant(\n    (googleMapsApiKey && googleMapsClientId) || !(googleMapsApiKey && googleMapsClientId),\n    'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.'\n  )\n\n  if (googleMapsApiKey) {\n    params.push(`key=${googleMapsApiKey}`)\n  } else if (googleMapsClientId) {\n    params.push(`client=${googleMapsClientId}`)\n  }\n\n  if (version) {\n    params.push(`v=${version}`)\n  }\n\n  if (language) {\n    params.push(`language=${language}`)\n  }\n\n  if (region) {\n    params.push(`region=${region}`)\n  }\n\n  if (libraries && libraries.length) {\n    params.push(`libraries=${libraries.sort().join(',')}`)\n  }\n\n  if (channel) {\n    params.push(`channel=${channel}`)\n  }\n\n  if (mapIds && mapIds.length) {\n    params.push(`map_ids=${mapIds.join(',')}`)\n  }\n\n  params.push('callback=initMap')\n\n  return `https://maps.googleapis.com/maps/api/js?${params.join('&')}`\n}\n","import * as React from 'react'\nimport invariant from 'invariant'\n\nimport { injectScript } from './utils/injectscript'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { LoadScriptUrlOptions, makeLoadScriptUrl } from './utils/make-load-script-url'\n\nlet cleaningUp = false\n\ninterface LoadScriptState {\n  loaded: boolean\n}\n\nexport interface LoadScriptProps extends LoadScriptUrlOptions {\n  id: string\n  nonce?: string\n  loadingElement?: React.ReactNode\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  onUnmount?: () => void\n  preventGoogleFontsLoading?: boolean\n}\n\nexport function DefaultLoadingElement(): JSX.Element {\n  return <div>{`Loading...`}</div>\n}\n\nexport const defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly',\n}\n\nclass LoadScript extends React.PureComponent<LoadScriptProps, LoadScriptState> {\n  public static defaultProps = defaultLoadScriptProps\n\n  check: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state = {\n    loaded: false,\n  }\n\n  cleanupCallback = (): void => {\n    // @ts-ignore\n    delete window.google.maps\n\n    this.injectScript()\n  }\n\n  componentDidMount(): void {\n    if (isBrowser) {\n      if (window.google && window.google.maps && !cleaningUp) {\n        console.error('google api is already presented')\n\n        return\n      }\n\n      this.isCleaningUp()\n        .then(this.injectScript)\n        .catch(function error(err) {\n          console.error('Error at injecting script after cleaning up: ', err)\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps: LoadScriptProps): void {\n    if (this.props.libraries !== prevProps.libraries) {\n      console.warn(\n        'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n      )\n    }\n\n    if (isBrowser && prevProps.language !== this.props.language) {\n      this.cleanup()\n      // TODO: refactor to use gDSFP maybe... wait for hooks refactoring.\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState(function setLoaded() {\n        return {\n          loaded: false,\n        }\n      }, this.cleanupCallback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (isBrowser) {\n      this.cleanup()\n\n      const timeoutCallback = (): void => {\n        if (!this.check.current) {\n          // @ts-ignore\n          delete window.google\n          cleaningUp = false\n        }\n      }\n\n      window.setTimeout(timeoutCallback, 1)\n\n      if (this.props.onUnmount) {\n        this.props.onUnmount()\n      }\n    }\n  }\n\n  isCleaningUp = async (): Promise<void> => {\n    function promiseCallback(resolve: () => void): void {\n      if (!cleaningUp) {\n        resolve()\n      } else {\n        if (isBrowser) {\n          const timer = window.setInterval(function interval() {\n            if (!cleaningUp) {\n              window.clearInterval(timer)\n\n              resolve()\n            }\n          }, 1)\n        }\n      }\n\n      return\n    }\n\n    return new Promise(promiseCallback)\n  }\n\n  cleanup = (): void => {\n    cleaningUp = true\n    const script = document.getElementById(this.props.id)\n\n    if (script && script.parentNode) {\n      script.parentNode.removeChild(script)\n    }\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('script'))\n      .filter(function filter(script: HTMLScriptElement): boolean {\n        return typeof script.src === 'string' && script.src.includes('maps.googleapis')\n      })\n      .forEach(function forEach(script: HTMLScriptElement): void {\n        if (script.parentNode) {\n          script.parentNode.removeChild(script)\n        }\n      })\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('link'))\n      .filter(function filter(link: HTMLLinkElement): boolean {\n        return (\n          link.href === 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans'\n        )\n      })\n      .forEach(function forEach(link: HTMLLinkElement) {\n        if (link.parentNode) {\n          link.parentNode.removeChild(link)\n        }\n      })\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('style'))\n      .filter(function filter(style: HTMLStyleElement): boolean {\n        return (\n          style.innerText !== undefined &&\n          style.innerText.length > 0 &&\n          style.innerText.includes('.gm-')\n        )\n      })\n      .forEach(function forEach(style: HTMLStyleElement) {\n        if (style.parentNode) {\n          style.parentNode.removeChild(style)\n        }\n      })\n  }\n\n  injectScript = (): void => {\n    if (this.props.preventGoogleFontsLoading) {\n      preventGoogleFonts()\n    }\n\n    invariant(!!this.props.id, 'LoadScript requires \"id\" prop to be a string: %s', this.props.id)\n\n    const injectScriptOptions = {\n      id: this.props.id,\n      nonce: this.props.nonce,\n      url: makeLoadScriptUrl(this.props),\n    }\n\n    injectScript(injectScriptOptions)\n      .then(() => {\n        if (this.props.onLoad) {\n          this.props.onLoad()\n        }\n\n        this.setState(function setLoaded() {\n          return {\n            loaded: true,\n          }\n        })\n\n        return\n      })\n      .catch(err => {\n        if (this.props.onError) {\n          this.props.onError(err)\n        }\n\n        console.error(`\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this\n            .props.googleMapsApiKey || '-'}) or Client ID (${this.props.googleMapsClientId ||\n            '-'}) to <LoadScript />\n          Otherwise it is a Network issue.\n        `)\n      })\n  }\n\n  render(): React.ReactNode {\n    return (\n      <>\n        <div ref={this.check} />\n\n        {this.state.loaded\n          ? this.props.children\n          : this.props.loadingElement || <DefaultLoadingElement />}\n      </>\n    )\n  }\n}\n\nexport default LoadScript\n","/* eslint-disable filenames/match-regex */\nimport * as React from 'react'\nimport invariant from 'invariant'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { injectScript } from './utils/injectscript'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\nimport { makeLoadScriptUrl, LoadScriptUrlOptions } from './utils/make-load-script-url'\n\nimport { defaultLoadScriptProps } from './LoadScript'\n\nexport interface UseLoadScriptOptions extends LoadScriptUrlOptions {\n  id?: string\n  nonce?: string\n  preventGoogleFontsLoading?: boolean\n}\n\nlet previouslyLoadedUrl: string\n\nexport function useLoadScript({\n  id = defaultLoadScriptProps.id,\n  version = defaultLoadScriptProps.version,\n  nonce,\n  googleMapsApiKey,\n  googleMapsClientId,\n  language,\n  region,\n  libraries,\n  preventGoogleFontsLoading,\n  channel,\n  mapIds,\n}: UseLoadScriptOptions): {\n  isLoaded: boolean\n  loadError: Error | undefined\n  url: string\n} {\n  const isMounted = React.useRef(false)\n  const [isLoaded, setLoaded] = React.useState(false)\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined)\n\n  React.useEffect(function trackMountedState() {\n    isMounted.current = true\n    return (): void => {\n      isMounted.current = false\n    }\n  }, [])\n\n  React.useEffect(\n    function applyPreventGoogleFonts() {\n      if (isBrowser && preventGoogleFontsLoading) {\n        preventGoogleFonts()\n      }\n    },\n    [preventGoogleFontsLoading]\n  )\n\n  React.useEffect(\n    function validateLoadedState() {\n      if (isLoaded) {\n        invariant(\n          !!window.google,\n          'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.'\n        )\n      }\n    },\n    [isLoaded]\n  )\n\n  const url = makeLoadScriptUrl({\n    version,\n    googleMapsApiKey,\n    googleMapsClientId,\n    language,\n    region,\n    libraries,\n    channel,\n    mapIds\n  })\n\n  React.useEffect(\n    function loadScriptAndModifyLoadedState() {\n      if (!isBrowser) {\n        return\n      }\n\n      function setLoadedIfMounted(): void {\n        if (isMounted.current) {\n          setLoaded(true)\n          previouslyLoadedUrl = url\n        }\n      }\n\n      if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n        setLoadedIfMounted()\n        return\n      }\n\n      injectScript({ id, url, nonce })\n        .then(setLoadedIfMounted)\n        .catch(function handleInjectError(err) {\n          if (isMounted.current) {\n            setLoadError(err)\n          }\n          console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${googleMapsApiKey ||\n          '-'}) or Client ID (${googleMapsClientId || '-'})\n        Otherwise it is a Network issue.\n      `)\n          console.error(err)\n        })\n    },\n    [id, url, nonce]\n  )\n\n  const prevLibraries = React.useRef<undefined | string[]>()\n\n  React.useEffect(\n    function checkPerformance() {\n      if (prevLibraries.current && libraries !== prevLibraries.current) {\n        console.warn(\n          'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n        )\n      }\n      prevLibraries.current = libraries\n    },\n    [libraries]\n  )\n\n  return { isLoaded, loadError, url }\n}\n","import * as React from 'react'\n\nimport { DefaultLoadingElement } from './LoadScript'\nimport { useLoadScript, UseLoadScriptOptions } from './useLoadScript'\n\nexport interface LoadScriptNextProps extends UseLoadScriptOptions {\n  loadingElement?: React.ReactElement\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  onUnmount?: () => void\n  children: React.ReactElement\n}\n\nconst defaultLoadingElement = <DefaultLoadingElement />\n\nfunction LoadScriptNext({\n  loadingElement,\n  onLoad,\n  onError,\n  onUnmount,\n  children,\n  ...hookOptions\n}: LoadScriptNextProps): JSX.Element {\n  const { isLoaded, loadError } = useLoadScript(hookOptions)\n\n  React.useEffect(\n    function handleOnLoad() {\n      if (isLoaded && typeof onLoad === 'function') {\n        onLoad()\n      }\n    },\n    [isLoaded, onLoad]\n  )\n\n  React.useEffect(\n    function handleOnError() {\n      if (loadError && typeof onError === 'function') {\n        onError(loadError)\n      }\n    },\n    [loadError, onError]\n  )\n\n  React.useEffect(\n    function handleOnUnmount() {\n      return () => {\n        if (onUnmount) {\n          onUnmount()\n        }\n      }\n    },\n    [onUnmount]\n  )\n\n  return isLoaded ? children : loadingElement || defaultLoadingElement\n}\n\nexport default React.memo(LoadScriptNext)\n","/* eslint-disable filenames/match-regex */\nimport * as React from 'react'\nimport { Loader } from '@googlemaps/js-api-loader'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\nimport { LoadScriptUrlOptions, Libraries } from './utils/make-load-script-url'\n\nimport { defaultLoadScriptProps } from './LoadScript'\n\nexport interface UseLoadScriptOptions extends LoadScriptUrlOptions {\n  id?: string\n  nonce?: string\n  preventGoogleFontsLoading?: boolean\n}\n\nexport function useJsApiLoader({\n  id = defaultLoadScriptProps.id,\n  version = defaultLoadScriptProps.version,\n  nonce,\n  googleMapsApiKey,\n  // googleMapsClientId,\n  language,\n  region,\n  libraries,\n  preventGoogleFontsLoading,\n  // channel,\n  mapIds,\n}: UseLoadScriptOptions): {\n  isLoaded: boolean\n  loadError: Error | undefined\n} {\n  const [isLoaded, setLoaded] = React.useState(false)\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined)\n\n  const loader = React.useMemo(function memo() {\n    return new Loader({\n      id,\n      apiKey: googleMapsApiKey,\n      version,\n      libraries,\n      language,\n      region,\n      mapIds,\n      nonce,\n    })\n  }, [id, googleMapsApiKey, version, libraries, language, region, mapIds, nonce])\n\n  React.useEffect(function effect() {\n    if (isLoaded) {\n      return\n    } else {\n      loader.load().then(function then() {\n        setLoaded(true)\n      })\n      .catch(function onrejected(error) {\n        setLoadError(error)\n      })\n    }\n  }, [])\n\n\n  React.useEffect(\n    function applyPreventGoogleFonts() {\n      if (isBrowser && preventGoogleFontsLoading) {\n        preventGoogleFonts()\n      }\n    },\n    [preventGoogleFontsLoading]\n  )\n\n  const prevLibraries = React.useRef<undefined | Libraries>()\n\n  React.useEffect(\n    function effect() {\n      if (prevLibraries.current && libraries !== prevLibraries.current) {\n        console.warn(\n          'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n        )\n      }\n      prevLibraries.current = libraries\n    },\n    [libraries]\n  )\n\n  return { isLoaded, loadError }\n}\n","import { PureComponent } from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {}\n\nconst updaterMap = {\n  options(instance: google.maps.TrafficLayer, options: google.maps.TrafficLayerOptions): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface TrafficLayerState {\n  trafficLayer: google.maps.TrafficLayer | null\n}\n\nexport interface TrafficLayerProps {\n  options?: google.maps.TrafficLayerOptions\n  /** This callback is called when the trafficLayer instance has loaded. It is called with the trafficLayer instance. */\n  onLoad?: (trafficLayer: google.maps.TrafficLayer) => void\n  /** This callback is called when the component unmounts. It is called with the trafficLayer instance. */\n  onUnmount?: (trafficLayer: google.maps.TrafficLayer) => void\n}\n\nexport class TrafficLayer extends PureComponent<TrafficLayerProps, TrafficLayerState> {\n  static contextType = MapContext\n\n  state = {\n    trafficLayer: null,\n  }\n\n  setTrafficLayerCallback = () => {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.trafficLayer)\n      }\n    }\n  }\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  componentDidMount(): void {\n    const trafficLayer = new google.maps.TrafficLayer({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: trafficLayer,\n    })\n\n    this.setState(function setTrafficLayer() {\n      return {\n        trafficLayer,\n      }\n    }, this.setTrafficLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: TrafficLayerProps): void {\n    if (this.state.trafficLayer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.trafficLayer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.trafficLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.trafficLayer.setMap(null)\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default TrafficLayer\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\ninterface BicyclingLayerState {\n  bicyclingLayer: google.maps.BicyclingLayer | null\n}\n\nexport interface BicyclingLayerProps {\n  /** This callback is called when the bicyclingLayer instance has loaded. It is called with the bicyclingLayer instance. */\n  onLoad?: (bicyclingLayer: google.maps.BicyclingLayer) => void\n  /** This callback is called when the component unmounts. It is called with the bicyclingLayer instance. */\n  onUnmount?: (bicyclingLayer: google.maps.BicyclingLayer) => void\n}\n\nexport class BicyclingLayer extends React.PureComponent<BicyclingLayerProps, BicyclingLayerState> {\n  static contextType = MapContext\n\n  state = {\n    bicyclingLayer: null,\n  }\n\n  setBicyclingLayerCallback = (): void => {\n    if (this.state.bicyclingLayer !== null) {\n      // TODO: how is this possibly null if we're doing a null check\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.bicyclingLayer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.bicyclingLayer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const bicyclingLayer = new google.maps.BicyclingLayer()\n\n    this.setState(function setBicyclingLayer() {\n      return {\n        bicyclingLayer,\n      }\n    }, this.setBicyclingLayerCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.bicyclingLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.bicyclingLayer)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.bicyclingLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default BicyclingLayer\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\ninterface TransitLayerState {\n  transitLayer: google.maps.TransitLayer | null\n}\n\nexport interface TransitLayerProps {\n  /** This callback is called when the transitLayer instance has loaded. It is called with the transitLayer instance. */\n  onLoad?: (transitLayer: google.maps.TransitLayer) => void\n  /** This callback is called when the component unmounts. It is called with the transitLayer instance. */\n  onUnmount?: (transitLayer: google.maps.TransitLayer) => void\n}\n\nexport class TransitLayer extends React.PureComponent<TransitLayerProps, TransitLayerState> {\n  static contextType = MapContext\n\n  state = {\n    transitLayer: null,\n  }\n\n  setTransitLayerCallback = (): void => {\n    if (this.state.transitLayer !== null) {\n      // TODO: how is this possibly null if we're doing a null check\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.transitLayer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.transitLayer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const transitLayer = new google.maps.TransitLayer()\n\n    this.setState(function setTransitLayer() {\n      return {\n        transitLayer,\n      }\n    }, this.setTransitLayerCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.transitLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.transitLayer)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.transitLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default TransitLayer\n","/* globals google */\nimport * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCircleComplete: 'circlecomplete',\n  onMarkerComplete: 'markercomplete',\n  onOverlayComplete: 'overlaycomplete',\n  onPolygonComplete: 'polygoncomplete',\n  onPolylineComplete: 'polylinecomplete',\n  onRectangleComplete: 'rectanglecomplete',\n}\n\nconst updaterMap = {\n  drawingMode(\n    instance: google.maps.drawing.DrawingManager,\n    drawingMode: google.maps.drawing.OverlayType | null\n  ): void {\n    instance.setDrawingMode(drawingMode)\n  },\n  options(\n    instance: google.maps.drawing.DrawingManager,\n    options: google.maps.drawing.DrawingManagerOptions\n  ): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface DrawingManagerState {\n  drawingManager: google.maps.drawing.DrawingManager | null\n}\n\nexport interface DrawingManagerProps {\n  options?: google.maps.drawing.DrawingManagerOptions\n  /** Changes the DrawingManager's drawing mode, which defines the type of overlay to be added on the map. Accepted values are 'marker', 'polygon', 'polyline', 'rectangle', 'circle', or null. A drawing mode of null means that the user can interact with the map as normal, and clicks do not draw anything. */\n  drawingMode?: google.maps.drawing.OverlayType | null\n  /** This event is fired when the user has finished drawing a circle. */\n  onCircleComplete?: (circle: google.maps.Circle) => void\n  /** This event is fired when the user has finished drawing a marker. */\n  onMarkerComplete?: (marker: google.maps.Marker) => void\n  /** This event is fired when the user has finished drawing an overlay of any type. */\n  onOverlayComplete?: (e: google.maps.drawing.OverlayCompleteEvent) => void\n  /** This event is fired when the user has finished drawing a polygon. */\n  onPolygonComplete?: (polygon: google.maps.Polygon) => void\n  /** This event is fired when the user has finished drawing a polyline. */\n  onPolylineComplete?: (polyline: google.maps.Polyline) => void\n  /** This event is fired when the user has finished drawing a rectangle. */\n  onRectangleComplete?: (rectangle: google.maps.Rectangle) => void\n  /** This callback is called when the drawingManager instance has loaded. It is called with the drawingManager instance. */\n  onLoad?: (drawingManager: google.maps.drawing.DrawingManager) => void\n  /** This callback is called when the component unmounts. It is called with the drawingManager instance. */\n  onUnmount?: (drawingManager: google.maps.drawing.DrawingManager) => void\n}\n\nexport class DrawingManager extends React.PureComponent<DrawingManagerProps, DrawingManagerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DrawingManagerState = {\n    drawingManager: null,\n  }\n\n  constructor(props: DrawingManagerProps) {\n    super(props)\n\n    invariant(\n      !!google.maps.drawing,\n      `Did you include prop libraries={['drawing']} in the URL? %s`,\n      google.maps.drawing\n    )\n  }\n\n  setDrawingManagerCallback = (): void => {\n    if (this.state.drawingManager !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.drawingManager)\n    }\n  }\n\n  componentDidMount(): void {\n    const drawingManager = new google.maps.drawing.DrawingManager({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: drawingManager,\n    })\n\n    this.setState(function setDrawingManager() {\n      return {\n        drawingManager,\n      }\n    }, this.setDrawingManagerCallback)\n  }\n\n  componentDidUpdate(prevProps: DrawingManagerProps): void {\n    if (this.state.drawingManager !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.drawingManager,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.drawingManager !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.drawingManager)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.drawingManager.setMap(null)\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DrawingManager\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport { HasMarkerAnchor } from '../../types'\n\nimport { Clusterer } from '@react-google-maps/marker-clusterer'\nimport { ReactNode } from 'react'\n\nconst eventMap = {\n  onAnimationChanged: 'animation_changed',\n  onClick: 'click',\n  onClickableChanged: 'clickable_changed',\n  onCursorChanged: 'cursor_changed',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDraggableChanged: 'draggable_changed',\n  onDragStart: 'dragstart',\n  onFlatChanged: 'flat_changed',\n  onIconChanged: 'icon_changed',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPositionChanged: 'position_changed',\n  onRightClick: 'rightclick',\n  onShapeChanged: 'shape_changed',\n  onTitleChanged: 'title_changed',\n  onVisibleChanged: 'visible_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  animation(instance: google.maps.Marker, animation: google.maps.Animation): void {\n    instance.setAnimation(animation)\n  },\n  clickable(instance: google.maps.Marker, clickable: boolean): void {\n    instance.setClickable(clickable)\n  },\n  cursor(instance: google.maps.Marker, cursor: string): void {\n    instance.setCursor(cursor)\n  },\n  draggable(instance: google.maps.Marker, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  icon(instance: google.maps.Marker, icon: string | google.maps.Icon | google.maps.Symbol): void {\n    instance.setIcon(icon)\n  },\n  label(instance: google.maps.Marker, label: string | google.maps.MarkerLabel): void {\n    instance.setLabel(label)\n  },\n  map(instance: google.maps.Marker, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  opacity(instance: google.maps.Marker, opacity: number): void {\n    instance.setOpacity(opacity)\n  },\n  options(instance: google.maps.Marker, options: google.maps.MarkerOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: google.maps.Marker,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  shape(instance: google.maps.Marker, shape: google.maps.MarkerShape): void {\n    instance.setShape(shape)\n  },\n  title(instance: google.maps.Marker, title: string): void {\n    instance.setTitle(title)\n  },\n  visible(instance: google.maps.Marker, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zIndex(instance: google.maps.Marker, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\nexport interface MarkerProps {\n  options?: google.maps.MarkerOptions\n  /** Start an animation. Any ongoing animation will be cancelled. Currently supported animations are: BOUNCE, DROP. Passing in null will cause any animation to stop. */\n  animation?: google.maps.Animation\n  /** If true, the marker receives mouse and touch events. Default value is true. */\n  clickable?: boolean\n  /** Mouse cursor to show on hover */\n  cursor?: string\n  /** If true, the marker can be dragged. Default value is false. */\n  draggable?: boolean\n  /** Icon for the foreground. If a string is provided, it is treated as though it were an Icon with the string as url. */\n  icon?: string | google.maps.Icon | google.maps.Symbol\n  /** Adds a label to the marker. The label can either be a string, or a MarkerLabel object. */\n  label?: string | google.maps.MarkerLabel\n  /** The marker's opacity between 0.0 and 1.0. */\n  opacity?: number\n\n  // required\n  /** Marker position. */\n  position: google.maps.LatLng | google.maps.LatLngLiteral\n  /** Image map region definition used for drag/click. */\n  shape?: google.maps.MarkerShape\n  /** Rollover text */\n  title?: string\n  /** If true, the marker is visible */\n  visible?: boolean\n  /** All markers are displayed on the map in order of their zIndex, with higher values displaying in front of markers with lower values. By default, markers are displayed according to their vertical position on screen, with lower markers appearing in front of markers further up the screen. */\n  zIndex?: number\n  /** Render prop that handles clustering markers */\n  clusterer?: Clusterer\n  /** Clusters are redrawn when a Marker is added unless noClustererRedraw? is set to true. */\n  noClustererRedraw?: boolean\n  /** This event is fired when the marker icon was clicked. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's clickable property changes. */\n  onClickableChanged?: () => void\n  /** This event is fired when the marker's cursor property changes. */\n  onCursorChanged?: () => void\n  /** This event is fired when the marker's animation property changes. */\n  onAnimationChanged?: () => void\n  /** This event is fired when the marker icon was double clicked. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the marker. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the marker. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's draggable property changes. */\n  onDraggableChanged?: () => void\n  /** This event is fired when the user starts dragging the marker. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's flat property changes. */\n  onFlatChanged?: () => void\n  /** This event is fired when the marker icon property changes. */\n  onIconChanged?: () => void\n  /** This event is fired for a mousedown on the marker. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the mouse leaves the area of the marker icon. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the mouse enters the area of the marker icon. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired for a mouseup on the marker. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired for a rightclick on the marker. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's shape property changes. */\n  onShapeChanged?: () => void\n  /** This event is fired when the marker title property changes. */\n  onTitleChanged?: () => void\n  /** This event is fired when the marker's visible property changes. */\n  onVisibleChanged?: () => void\n  /** This event is fired when the marker's zIndex property changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the marker instance has loaded. It is called with the marker instance. */\n  onLoad?: (marker: google.maps.Marker) => void\n  /** This callback is called when the component unmounts. It is called with the marker instance. */\n  onUnmount?: (marker: google.maps.Marker) => void\n}\n\nexport class Marker extends React.PureComponent<MarkerProps> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  marker: google.maps.Marker | undefined\n\n  componentDidMount(): void {\n    const markerOptions = {\n      ...(this.props.options || {}),\n      ...(this.props.clusterer ? {} : { map: this.context }),\n      position: this.props.position,\n    }\n\n    // Unfortunately we can't just do this in the contstructor, because the\n    // `MapContext` might not be filled in yet.\n    this.marker = new google.maps.Marker(markerOptions)\n\n    if (this.props.clusterer) {\n      this.props.clusterer.addMarker(this.marker, !!this.props.noClustererRedraw)\n    } else {\n      this.marker.setMap(this.context)\n    }\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: this.marker,\n    })\n\n    if (this.props.onLoad) {\n      this.props.onLoad(this.marker)\n    }\n  }\n\n  componentDidUpdate(prevProps: MarkerProps): void {\n    if (this.marker) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.marker,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.marker) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.marker)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.props.clusterer) {\n        this.props.clusterer.removeMarker(this.marker, !!this.props.noClustererRedraw)\n      } else {\n        this.marker && this.marker.setMap(null)\n      }\n    }\n  }\n\n  render(): React.ReactNode {\n    let children: ReactNode | null = null\n    if (this.props.children) {\n      children = React.Children.map(this.props.children, child => {\n        if (!React.isValidElement<HasMarkerAnchor>(child)) {\n          return child\n        }\n\n        let elementChild: React.ReactElement<HasMarkerAnchor> = child\n        return React.cloneElement(elementChild, { anchor: this.marker })\n      })\n    }\n    return children || null\n  }\n}\n\nexport default Marker\n","/* eslint-disable filenames/match-exported */\nimport * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nimport {\n  Clusterer,\n  ClusterIconStyle,\n  Cluster,\n  ClustererOptions,\n  TCalculator,\n} from '@react-google-maps/marker-clusterer'\n\nconst eventMap = {\n  onClick: 'click',\n  onClusteringBegin: 'clusteringbegin',\n  onClusteringEnd: 'clusteringend',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n}\n\nconst updaterMap = {\n  averageCenter(instance: Clusterer, averageCenter: boolean): void {\n    instance.setAverageCenter(averageCenter)\n  },\n\n  batchSizeIE(instance: Clusterer, batchSizeIE: number): void {\n    instance.setBatchSizeIE(batchSizeIE)\n  },\n\n  calculator(instance: Clusterer, calculator: any): void {\n    instance.setCalculator(calculator)\n  },\n\n  clusterClass(instance: Clusterer, clusterClass: string): void {\n    instance.setClusterClass(clusterClass)\n  },\n\n  enableRetinaIcons(instance: Clusterer, enableRetinaIcons: boolean): void {\n    instance.setEnableRetinaIcons(enableRetinaIcons)\n  },\n\n  gridSize(instance: Clusterer, gridSize: number): void {\n    instance.setGridSize(gridSize)\n  },\n\n  ignoreHidden(instance: Clusterer, ignoreHidden: boolean): void {\n    instance.setIgnoreHidden(ignoreHidden)\n  },\n\n  imageExtension(instance: Clusterer, imageExtension: string): void {\n    instance.setImageExtension(imageExtension)\n  },\n\n  imagePath(instance: Clusterer, imagePath: string): void {\n    instance.setImagePath(imagePath)\n  },\n\n  imageSizes(instance: Clusterer, imageSizes: number[]): void {\n    instance.setImageSizes(imageSizes)\n  },\n\n  maxZoom(instance: Clusterer, maxZoom: number): void {\n    instance.setMaxZoom(maxZoom)\n  },\n\n  minimumClusterSize(instance: Clusterer, minimumClusterSize: number): void {\n    instance.setMinimumClusterSize(minimumClusterSize)\n  },\n\n  styles(instance: Clusterer, styles: ClusterIconStyle[]): void {\n    instance.setStyles(styles)\n  },\n\n  title(instance: Clusterer, title: string): void {\n    instance.setTitle(title)\n  },\n\n  zoomOnClick(instance: Clusterer, zoomOnClick: boolean): void {\n    instance.setZoomOnClick(zoomOnClick)\n  },\n}\n\ninterface ClustererState {\n  markerClusterer: Clusterer | null\n}\n\nexport interface ClustererProps {\n  // required\n  children: (markerClusterer: Clusterer) => React.ReactNode\n\n  options?: ClustererOptions // TODO: it could be undefined\n  /** Whether the position of a cluster marker should be the average position of all markers in the cluster. If set to false, the cluster marker is positioned at the location of the first marker added to the cluster. The default value is false. */\n  averageCenter?: boolean\n  /** When Internet Explorer is being used, markers are processed in several batches with a small delay inserted between each batch in an attempt to avoid Javascript timeout errors. Set this property to the number of markers to be processed in a single batch; select as high a number as you can without causing a timeout error in the browser. This number might need to be as low as 100 if 15,000 markers are being managed, for example. The default value is MarkerClusterer.BATCH_SIZE_IE. */\n  batchSizeIE?: number\n  /** The function used to determine the text to be displayed on a cluster marker and the index indicating which style to use for the cluster marker. The input parameters for the function are (1) the array of markers represented by a cluster marker and (2) the number of cluster icon styles. It returns a ClusterIconInfo object. The default calculator returns a text property which is the number of markers in the cluster and an index property which is one higher than the lowest integer such that 10^i exceeds the number of markers in the cluster, or the size of the styles array, whichever is less. The styles array element used has an index of index minus 1. For example, the default calculator returns a text value of \"125\" and an index of 3 for a cluster icon representing 125 markers so the element used in the styles array is 2. A calculator may also return a title property that contains the text of the tooltip to be used for the cluster marker. If title is not defined, the tooltip is set to the value of the title property for the MarkerClusterer. The default value is MarkerClusterer.CALCULATOR. */\n  calculator?: TCalculator\n  /** The name of the CSS class defining general styles for the cluster markers. Use this class to define CSS styles that are not set up by the code that processes the styles array. The default value is \"cluster\". */\n  clusterClass?: string\n  /** Whether to allow the use of cluster icons that have sizes that are some multiple (typically double) of their actual display size. Icons such as these look better when viewed on high-resolution monitors such as Apple's Retina displays. Note: if this property is true, sprites cannot be used as cluster icons. The default value is false. */\n  enableRetinaIcons?: boolean\n  /** The grid size of a cluster in pixels. The grid is a square. The default value is 60. */\n  gridSize?: number\n  /** Whether to ignore hidden markers in clusters. You may want to set this to true to ensure that hidden markers are not included in the marker count that appears on a cluster marker (this count is the value of the text property of the result returned by the default calculator). If set to true and you change the visibility of a marker being clustered, be sure to also call MarkerClusterer.repaint(). The default value is false. */\n  ignoreHidden?: boolean\n  /** The extension name for the cluster icon image files (e.g., \"png\" or \"jpg\"). The default value is MarkerClusterer.IMAGE_EXTENSION. */\n  imageExtension?: string\n  /** The full URL of the root name of the group of image files to use for cluster icons. The complete file name is of the form imagePath.imageExtension where n is the image file number (1, 2, etc.). The default value is MarkerClusterer.IMAGE_PATH. */\n  imagePath?: string\n  /** An array of numbers containing the widths of the group of imagePath.imageExtension image files. (The images are assumed to be square.) The default value is MarkerClusterer.IMAGE_SIZES. */\n  imageSizes?: number[]\n  /** The maximum zoom level at which clustering is enabled or null if clustering is to be enabled at all zoom levels. The default value is null. */\n  maxZoom?: number\n  /** The minimum number of markers needed in a cluster before the markers are hidden and a cluster marker appears. The default value is 2. */\n  minimumClusterSize?: number\n  /** An array of ClusterIconStyle elements defining the styles of the cluster markers to be used. The element to be used to style a given cluster marker is determined by the function defined by the calculator property. The default is an array of ClusterIconStyle elements whose properties are derived from the values for imagePath, imageExtension, and imageSizes. */\n  styles?: ClusterIconStyle[]\n  /** The tooltip to display when the mouse moves over a cluster marker. (Alternatively, you can use a custom calculator function to specify a different tooltip for each cluster marker.) The default value is \"\". */\n  title?: string\n  /** Whether to zoom the map when a cluster marker is clicked. You may want to set this to false if you have installed a handler for the click event and it deals with zooming on its own. The default value is true. */\n  zoomOnClick?: boolean\n  /** This event is fired when a cluster marker is clicked. */\n  onClick?: (cluster: Cluster) => void\n  /** This event is fired when the MarkerClusterer begins clustering markers. */\n  onClusteringBegin?: (markerClusterer: Clusterer) => void\n  /** This event is fired when the MarkerClusterer stops clustering markers. */\n  onClusteringEnd?: (markerClusterer: Clusterer) => void\n  /** \tThis event is fired when the mouse moves over a cluster marker. */\n  onMouseOver?: (cluster: Cluster) => void\n  /** This event is fired when the mouse moves out of a cluster marker. */\n  onMouseOut?: (cluster: Cluster) => void\n  /** This callback is called when the markerClusterer instance has loaded. It is called with the markerClusterer instance. */\n  onLoad?: (markerClusterer: Clusterer) => void\n  /** This callback is called when the component unmounts. It is called with the markerClusterer instance. */\n  onUnmount?: (markerClusterer: Clusterer) => void\n}\n\nexport class ClustererComponent extends React.PureComponent<ClustererProps, ClustererState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: ClustererState = {\n    markerClusterer: null,\n  }\n\n  setClustererCallback = (): void => {\n    if (this.state.markerClusterer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.markerClusterer)\n    }\n  }\n\n  componentDidMount(): void {\n    if (this.context) {\n      const markerClusterer = new Clusterer(this.context, [], this.props.options)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: markerClusterer,\n      })\n\n      this.setState(function setClusterer(): ClustererState {\n        return {\n          markerClusterer,\n        }\n      }, this.setClustererCallback)\n    }\n  }\n\n  componentDidUpdate(prevProps: ClustererProps): void {\n    if (this.state.markerClusterer) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.markerClusterer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.markerClusterer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.markerClusterer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.markerClusterer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return this.state.markerClusterer !== null\n      ? this.props.children(this.state.markerClusterer)\n      : null\n  }\n}\n\nexport default ClustererComponent\n","/* global google */\n/* eslint-disable filenames/match-exported */\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport invariant from 'invariant'\nimport {\n  InfoBox as GoogleMapsInfoBox,\n  InfoBoxOptions as GoogleMapsInfoBoxOptions,\n} from '@react-google-maps/infobox'\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  options(instance: GoogleMapsInfoBox, options: GoogleMapsInfoBoxOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: GoogleMapsInfoBox,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    if (position instanceof google.maps.LatLng) {\n      instance.setPosition(position)\n    } else {\n      instance.setPosition(new google.maps.LatLng(position.lat, position.lng))\n    }\n  },\n  visible(instance: GoogleMapsInfoBox, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zIndex(instance: GoogleMapsInfoBox, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ntype InfoBoxOptions = Omit<GoogleMapsInfoBoxOptions, 'position'> & {\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n}\n\ninterface InfoBoxState {\n  infoBox: GoogleMapsInfoBox | null\n}\n\nexport interface InfoBoxProps {\n  /** Can be any MVCObject that exposes a LatLng position property and optionally a Point anchorPoint property for calculating the pixelOffset. The anchorPoint is the offset from the anchor's position to the tip of the InfoBox. */\n  anchor?: google.maps.MVCObject\n  options?: InfoBoxOptions\n  /** The LatLng at which to display this InfoBox. If the InfoBox is opened with an anchor, the anchor's position will be used instead. */\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** All InfoBoxes are displayed on the map in order of their zIndex, with higher values displaying in front of InfoBoxes with lower values. By default, InfoBoxes are displayed according to their latitude, with InfoBoxes of lower latitudes appearing in front of InfoBoxes at higher latitudes. InfoBoxes are always displayed in front of markers. */\n  zIndex?: number\n  /** This event is fired when the close button was clicked. */\n  onCloseClick?: () => void\n  /** This event is fired when the <div> containing the InfoBox's content is attached to the DOM. You may wish to monitor this event if you are building out your info window content dynamically. */\n  onDomReady?: () => void\n  /** This event is fired when the content property changes. */\n  onContentChanged?: () => void\n  /** This event is fired when the position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired when the InfoBox's zIndex changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the infoBox instance has loaded. It is called with the infoBox instance. */\n  onLoad?: (infoBox: GoogleMapsInfoBox) => void\n  /** This callback is called when the component unmounts. It is called with the infoBox instance. */\n  onUnmount?: (infoBox: GoogleMapsInfoBox) => void\n}\n\nexport class InfoBoxComponent extends React.PureComponent<InfoBoxProps, InfoBoxState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: HTMLElement | null = null\n\n  state: InfoBoxState = {\n    infoBox: null,\n  }\n\n  open = (infoBox: GoogleMapsInfoBox, anchor?: google.maps.MVCObject): void => {\n    if (anchor) {\n      infoBox.open(this.context, anchor)\n    } else if (infoBox.getPosition()) {\n      infoBox.open(this.context)\n    } else {\n      invariant(false, 'You must provide either an anchor or a position prop for <InfoBox>.')\n    }\n  }\n\n  setInfoBoxCallback = (): void => {\n    const { anchor, onLoad } = this.props\n    const { infoBox } = this.state\n\n    if (infoBox !== null && this.containerElement !== null) {\n      infoBox.setContent(this.containerElement)\n      this.open(infoBox, anchor)\n\n      if (onLoad) {\n        onLoad(infoBox)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const { options } = this.props\n    const { position, ...infoBoxOptions }: InfoBoxOptions = options || {}\n\n    let positionLatLng: google.maps.LatLng | undefined\n    if (position && !(position instanceof google.maps.LatLng)) {\n      positionLatLng = new google.maps.LatLng(position.lat, position.lng)\n    }\n\n    const infoBox = new GoogleMapsInfoBox({\n      ...infoBoxOptions,\n      ...(positionLatLng ? { position: positionLatLng } : {}),\n    })\n\n    this.containerElement = document.createElement('div')\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoBox,\n    })\n\n    this.setState({ infoBox }, this.setInfoBoxCallback)\n  }\n\n  componentDidUpdate(prevProps: InfoBoxProps): void {\n    const { infoBox } = this.state\n\n    if (infoBox !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: infoBox,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    const { onUnmount } = this.props\n    const { infoBox } = this.state\n\n    if (infoBox !== null) {\n      if (onUnmount) {\n        onUnmount(infoBox)\n      }\n\n      unregisterEvents(this.registeredEvents)\n      infoBox.close()\n    }\n  }\n\n  render(): React.ReactPortal | null {\n    if (!this.containerElement) {\n      return null\n    }\n\n    return ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement)\n  }\n}\n\nexport default InfoBoxComponent\n","/* global google */\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport invariant from 'invariant'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  options(instance: google.maps.InfoWindow, options: google.maps.InfoWindowOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: google.maps.InfoWindow,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  zIndex(instance: google.maps.InfoWindow, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface InfoWindowState {\n  infoWindow: google.maps.InfoWindow | null\n}\n\nexport interface InfoWindowProps {\n  /** Can be any MVCObject that exposes a LatLng position property and optionally a Point anchorPoint property for calculating the pixelOffset. The anchorPoint is the offset from the anchor's position to the tip of the InfoWindow. */\n  anchor?: google.maps.MVCObject\n  options?: google.maps.InfoWindowOptions\n  /** The LatLng at which to display this InfoWindow. If the InfoWindow is opened with an anchor, the anchor's position will be used instead. */\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** All InfoWindows are displayed on the map in order of their zIndex, with higher values displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed according to their latitude, with InfoWindows of lower latitudes appearing in front of InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers. */\n  zIndex?: number\n  /** This event is fired when the close button was clicked. */\n  onCloseClick?: () => void\n  /** This event is fired when the <div> containing the InfoWindow's content is attached to the DOM. You may wish to monitor this event if you are building out your info window content dynamically. */\n  onDomReady?: () => void\n  /** This event is fired when the content property changes. */\n  onContentChanged?: () => void\n  /** This event is fired when the position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired when the InfoWindow's zIndex changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the infoWindow instance has loaded. It is called with the infoWindow instance. */\n  onLoad?: (infoWindow: google.maps.InfoWindow) => void\n  /** This callback is called when the component unmounts. It is called with the infoWindow instance. */\n  onUnmount?: (infoWindow: google.maps.InfoWindow) => void\n}\n\nexport class InfoWindow extends React.PureComponent<InfoWindowProps, InfoWindowState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: HTMLElement | null = null\n\n  state: InfoWindowState = {\n    infoWindow: null,\n  }\n\n  open = (infoWindow: google.maps.InfoWindow, anchor?: google.maps.MVCObject): void => {\n    if (anchor) {\n      infoWindow.open(this.context, anchor)\n    } else if (infoWindow.getPosition()) {\n      infoWindow.open(this.context)\n    } else {\n      invariant(\n        false,\n        `You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.`\n      )\n    }\n  }\n\n  setInfoWindowCallback = (): void => {\n    if (this.state.infoWindow !== null && this.containerElement !== null) {\n      this.state.infoWindow.setContent(this.containerElement)\n\n      this.open(this.state.infoWindow, this.props.anchor)\n\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.infoWindow)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const infoWindow = new google.maps.InfoWindow({\n      ...(this.props.options || {}),\n    })\n\n    this.containerElement = document.createElement('div')\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoWindow,\n    })\n\n    this.setState(function setInfoWindow() {\n      return {\n        infoWindow,\n      }\n    }, this.setInfoWindowCallback)\n  }\n\n  componentDidUpdate(prevProps: InfoWindowProps): void {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.infoWindow,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.state.infoWindow.close()\n    }\n  }\n\n  render(): React.ReactPortal | React.ReactNode {\n    return this.containerElement ? (\n      ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement)\n    ) : (\n      <></>\n    )\n  }\n}\n\nexport default InfoWindow\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  draggable(instance: google.maps.Polyline, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Polyline, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Polyline, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Polyline, options: google.maps.PolylineOptions): void {\n    instance.setOptions(options)\n  },\n  path(\n    instance: google.maps.Polyline,\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[]\n  ): void {\n    instance.setPath(path)\n  },\n  visible(instance: google.maps.Polyline, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface PolylineState {\n  polyline: google.maps.Polyline | null\n}\n\nexport interface PolylineProps {\n  options?: google.maps.PolylineOptions\n  /** If set to true, the user can drag this shape over the map. The geodesic property defines the mode of dragging. */\n  draggable?: boolean\n  /** If set to true, the user can edit this shape by dragging the control points shown at the vertices and on each segment. */\n  editable?: boolean\n  /** Hides this poly if set to false. */\n  visible?: boolean\n  /** Sets the path. The ordered sequence of coordinates of the Polyline. This path may be specified using either a simple array of LatLngs, or an MVCArray of LatLngs. Note that if you pass a simple array, it will be converted to an MVCArray Inserting or removing LatLngs in the MVCArray will automatically update the polyline on the map. */\n  path?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n  /** This event is fired when the DOM dblclick event is fired on the Polyline. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the polyline. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user starts dragging the polyline. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the Polyline. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the Polyline. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polyline mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polyline mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the Polyline. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the Polyline is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the Polyline. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the polyline. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This callback is called when the polyline instance has loaded. It is called with the polyline instance. */\n  onLoad?: (polyline: google.maps.Polyline) => void\n  /** This callback is called when the component unmounts. It is called with the polyline instance. */\n  onUnmount?: (polyline: google.maps.Polyline) => void\n}\n\nexport class Polyline extends React.PureComponent<PolylineProps, PolylineState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: PolylineState = {\n    polyline: null,\n  }\n\n  setPolylineCallback = (): void => {\n    if (this.state.polyline !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.polyline)\n    }\n  }\n\n  componentDidMount(): void {\n    const polyline = new google.maps.Polyline({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polyline,\n    })\n\n    this.setState(function setPolyline() {\n      return {\n        polyline,\n      }\n    }, this.setPolylineCallback)\n  }\n\n  componentDidUpdate(prevProps: PolylineProps): void {\n    if (this.state.polyline !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polyline,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.polyline !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polyline)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.polyline.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <></>\n  }\n}\n\nexport default Polyline\n","/* global google */\nimport * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  draggable(instance: google.maps.Polygon, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Polygon, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Polygon, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Polygon, options: google.maps.PolygonOptions): void {\n    instance.setOptions(options)\n  },\n  path(\n    instance: google.maps.Polygon,\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[]\n  ): void {\n    instance.setPath(path)\n  },\n\n  paths(\n    instance: google.maps.Polygon,\n    paths:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n      | google.maps.LatLng[]\n      | google.maps.LatLng[][]\n      | google.maps.LatLngLiteral[]\n      | google.maps.LatLngLiteral[][]\n  ): void {\n    instance.setPaths(paths)\n  },\n\n  visible(instance: google.maps.Polygon, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface PolygonState {\n  polygon: google.maps.Polygon | null\n}\n\nexport interface PolygonProps {\n  options?: google.maps.PolygonOptions\n  /** If set to true, the user can drag this shape over the map. The geodesic property defines the mode of dragging. */\n  draggable?: boolean\n  /** If set to true, the user can edit this shape by dragging the control points shown at the vertices and on each segment. */\n  editable?: boolean\n  /** Hides this poly if set to false. */\n  visible?: boolean\n  /** Sets the first path. See Paths for more details. */\n  path?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n  /** Sets the path for this polygon. The ordered sequence of coordinates that designates a closed loop. Unlike polylines, a polygon may consist of one or more paths. As a result, the paths property may specify one or more arrays of LatLng coordinates. Paths are closed automatically; do not repeat the first vertex of the path as the last vertex. Simple polygons may be defined using a single array of LatLngs. More complex polygons may specify an array of arrays. Any simple arrays are converted into MVCArrays. Inserting or removing LatLngs from the MVCArray will automatically update the polygon on the map. */\n  paths?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n    | google.maps.LatLng[]\n    | google.maps.LatLng[][]\n    | google.maps.LatLngLiteral[]\n    | google.maps.LatLngLiteral[][]\n  /** This event is fired when the DOM dblclick event is fired on the Polygon. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the polygon. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user starts dragging the polygon. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the Polygon. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the Polygon. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polygon mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polygon mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the Polygon. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the Polygon is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the Polygon. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the polygon. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This callback is called when the polygon instance has loaded. It is called with the polygon instance. */\n  onLoad?: (polygon: google.maps.Polygon) => void\n  /** This callback is called when the component unmounts. It is called with the polygon instance. */\n  onUnmount?: (polygon: google.maps.Polygon) => void\n}\n\nexport class Polygon extends React.PureComponent<PolygonProps, PolygonState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: PolygonState = {\n    polygon: null,\n  }\n\n  setPolygonCallback = (): void => {\n    if (this.state.polygon !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.polygon)\n    }\n  }\n\n  componentDidMount(): void {\n    const polygon = new google.maps.Polygon({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polygon,\n    })\n\n    this.setState(function setPolygon() {\n      return {\n        polygon,\n      }\n    }, this.setPolygonCallback)\n  }\n\n  componentDidUpdate(prevProps: PolygonProps): void {\n    if (this.state.polygon !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polygon,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.polygon !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polygon)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.polygon && this.state.polygon.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default Polygon\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onBoundsChanged: 'bounds_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.Rectangle,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n  draggable(instance: google.maps.Rectangle, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Rectangle, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Rectangle, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Rectangle, options: google.maps.RectangleOptions): void {\n    instance.setOptions(options)\n  },\n  visible(instance: google.maps.Rectangle, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface RectangleState {\n  rectangle: google.maps.Rectangle | null\n}\n\nexport interface RectangleProps {\n  options?: google.maps.RectangleOptions\n  /** Sets the bounds of this rectangle. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  /** If set to true, the user can drag this rectangle over the map. */\n  draggable?: boolean\n  /** If set to true, the user can edit this rectangle by dragging the control points shown at the corners and on each edge. */\n  editable?: boolean\n  /** Hides this rectangle if set to false. */\n  visible?: boolean\n  /** Indicates whether this Rectangle handles mouse events. Defaults to true. */\n  clickable?: boolean\n  /** This event is fired when the DOM dblclick event is fired on the rectangle. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the rectangle. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user starts dragging the rectangle. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the rectangle. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the rectangle. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on rectangle mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on rectangle mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the rectangle. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the rectangle is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the rectangle. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the rectangle. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the rectangle's bounds are changed. */\n  onBoundsChanged?: () => void\n  /** This callback is called when the rectangle instance has loaded. It is called with the rectangle instance. */\n  onLoad?: (rectangle: google.maps.Rectangle) => void\n  /** This callback is called when the component unmounts. It is called with the rectangle instance. */\n  onUnmount?: (rectangle: google.maps.Rectangle) => void\n}\n\nexport class Rectangle extends React.PureComponent<RectangleProps, RectangleState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: RectangleState = {\n    rectangle: null,\n  }\n\n  setRectangleCallback = (): void => {\n    if (this.state.rectangle !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.rectangle)\n    }\n  }\n\n  componentDidMount(): void {\n    const rectangle = new google.maps.Rectangle({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: rectangle,\n    })\n\n    this.setState(function setRectangle() {\n      return {\n        rectangle,\n      }\n    }, this.setRectangleCallback)\n  }\n\n  componentDidUpdate(prevProps: RectangleProps): void {\n    if (this.state.rectangle !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.rectangle,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.rectangle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.rectangle)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.rectangle.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <></>\n  }\n}\n\nexport default Rectangle\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRadiusChanged: 'radius_changed',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  center(instance: google.maps.Circle, center: google.maps.LatLng): void {\n    instance.setCenter(center)\n  },\n  draggable(instance: google.maps.Circle, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Circle, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Circle, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Circle, options: google.maps.CircleOptions): void {\n    instance.setOptions(options)\n  },\n  radius(instance: google.maps.Circle, radius: number): void {\n    instance.setRadius(radius)\n  },\n  visible(instance: google.maps.Circle, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface CircleState {\n  circle: google.maps.Circle | null\n}\n\nexport interface CircleProps {\n  options?: google.maps.CircleOptions\n\n  // required\n  /** sets the center of the circle */\n  center: google.maps.LatLng | google.maps.LatLngLiteral\n\n  // required\n  /** Sets the radius of this circle (in meters) */\n  radius: number\n  /** If set to true, the user can drag this circle over the map */\n  draggable?: boolean\n  /** If set to true, the user can edit this circle by dragging the control points shown at the center and around the circumference of the circle. */\n  editable?: boolean\n  /** Hides this circle if set to false. */\n  visible?: boolean\n  /** This event is fired when the DOM dblclick event is fired on the circle. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the circle. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /**  This event is fired when the user starts dragging the circle. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the circle. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the circle. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on circle mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on circle mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the circle. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the circle is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the circle's center is changed. */\n  onCenterChanged?: () => void\n  /** This event is fired when the DOM click event is fired on the circle. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the circle. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the circle's radius is changed. */\n  onRadiusChanged?: () => void\n  /** This callback is called when the circle instance has loaded. It is called with the circle instance. */\n  onLoad?: (circle: google.maps.Circle) => void\n  /** This callback is called when the component unmounts. It is called with the circle instance. */\n  onUnmount?: (circle: google.maps.Circle) => void\n}\n\nexport class Circle extends React.PureComponent<CircleProps, CircleState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: CircleState = {\n    circle: null,\n  }\n\n  setCircleCallback = (): void => {\n    if (this.state.circle !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.circle)\n    }\n  }\n\n  componentDidMount(): void {\n    const circle = new google.maps.Circle({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: circle,\n    })\n\n    this.setState(function setCircle() {\n      return {\n        circle,\n      }\n    }, this.setCircleCallback)\n  }\n\n  componentDidUpdate(prevProps: CircleProps): void {\n    if (this.state.circle !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.circle,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.circle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.circle)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.circle && this.state.circle.setMap(null)\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default Circle\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onAddFeature: 'addfeature',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRemoveFeature: 'removefeature',\n  onRemoveProperty: 'removeproperty',\n  onRightClick: 'rightclick',\n  onSetGeometry: 'setgeometry',\n  onSetProperty: 'setproperty',\n}\n\nconst updaterMap = {\n  add(\n    instance: google.maps.Data,\n    features: google.maps.Data.Feature | google.maps.Data.FeatureOptions\n  ): void {\n    instance.add(features)\n  },\n  addgeojson(\n    instance: google.maps.Data,\n    geojson: object,\n    options?: google.maps.Data.GeoJsonOptions\n  ): void {\n    instance.addGeoJson(geojson, options)\n  },\n  contains(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.contains(feature)\n  },\n  foreach(instance: google.maps.Data, callback: (feature: google.maps.Data.Feature) => void): void {\n    instance.forEach(callback)\n  },\n  loadgeojson(\n    instance: google.maps.Data,\n    url: string,\n    options: google.maps.Data.GeoJsonOptions,\n    callback: (features: google.maps.Data.Feature[]) => void\n  ): void {\n    instance.loadGeoJson(url, options, callback)\n  },\n  overridestyle(\n    instance: google.maps.Data,\n    feature: google.maps.Data.Feature,\n    style: google.maps.Data.StyleOptions\n  ): void {\n    instance.overrideStyle(feature, style)\n  },\n  remove(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.remove(feature)\n  },\n  revertstyle(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.revertStyle(feature)\n  },\n  controlposition(instance: google.maps.Data, controlPosition: google.maps.ControlPosition): void {\n    instance.setControlPosition(controlPosition)\n  },\n  controls(instance: google.maps.Data, controls: google.maps.DrawingMode[] | null): void {\n    instance.setControls(controls)\n  },\n  drawingmode(instance: google.maps.Data, mode: google.maps.DrawingMode): void {\n    instance.setDrawingMode(mode)\n  },\n  map(instance: google.maps.Data, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  style(\n    instance: google.maps.Data,\n    style: google.maps.Data.StylingFunction | google.maps.Data.StyleOptions\n  ): void {\n    instance.setStyle(style)\n  },\n  togeojson(instance: google.maps.Data, callback: (feature: object) => void): void {\n    instance.toGeoJson(callback)\n  },\n}\n\ninterface DataState {\n  data: google.maps.Data | null\n}\nexport interface DataProps {\n  options?: google.maps.Data.DataOptions\n  /**  This event is fired when a feature is added to the collection. */\n  onAddFeature?: (e: google.maps.Data.AddFeatureEvent) => void\n  /**  This event is fired for a click on the geometry. */\n  onClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a double click on the geometry. */\n  onDblClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a mousedown on the geometry. */\n  onMouseDown?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when the mouse leaves the area of the geometry. */\n  onMouseOut?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when the mouse enters the area of the geometry. */\n  onMouseOver?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a mouseup on the geometry. */\n  onMouseUp?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when a feature is removed from the collection. */\n  onRemoveFeature?: (e: google.maps.Data.RemoveFeatureEvent) => void\n  /**  This event is fired when a feature's property is removed. */\n  onRemoveProperty?: (e: google.maps.Data.RemovePropertyEvent) => void\n  /**  This event is fired for a rightclick on the geometry. */\n  onRightClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when a feature's geometry is set. */\n  onSetGeometry?: (e: google.maps.Data.SetGeometryEvent) => void\n  /**  This event is fired when a feature's property is set. */\n  onSetProperty?: (e: google.maps.Data.SetPropertyEvent) => void\n  /**  This callback is called when the data instance has loaded. It is called with the data instance. */\n  onLoad?: (data: google.maps.Data) => void\n  /**  This callback is called when the component unmounts. It is called with the data instance.  */\n  onUnmount?: (data: google.maps.Data) => void\n}\n\nexport class Data extends React.PureComponent<DataProps, DataState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DataState = {\n    data: null,\n  }\n\n  setDataCallback = (): void => {\n    if (this.state.data !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.data)\n    }\n  }\n\n  componentDidMount(): void {\n    const data = new google.maps.Data({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: data,\n    })\n\n    this.setState(function setData() {\n      return {\n        data,\n      }\n    }, this.setDataCallback)\n  }\n\n  componentDidUpdate(prevProps: DataProps): void {\n    if (this.state.data !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.data,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.data !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.data)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.state.data) {\n        this.state.data.setMap(null)\n      }\n    }\n  }\n\n  render(): null {\n    return null\n  }\n}\n\nexport default Data\n","import { PureComponent } from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDefaultViewportChanged: 'defaultviewport_changed',\n  onStatusChanged: 'status_changed',\n}\n\nconst updaterMap = {\n  options(instance: google.maps.KmlLayer, options: google.maps.KmlLayerOptions): void {\n    instance.setOptions(options)\n  },\n  url(instance: google.maps.KmlLayer, url: string): void {\n    instance.setUrl(url)\n  },\n  zIndex(instance: google.maps.KmlLayer, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface KmlLayerState {\n  kmlLayer: google.maps.KmlLayer | null\n}\n\nexport interface KmlLayerProps {\n  options?: google.maps.KmlLayerOptions\n  /** The URL of the KML document to display. */\n  url?: string\n  /** The z-index of the layer. */\n  zIndex?: number\n  /** This event is fired when a feature in the layer is clicked. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the KML layers default viewport has changed. */\n  onDefaultViewportChanged?: () => void\n  /** This event is fired when the KML layer has finished loading. At this point it is safe to read the status property to determine if the layer loaded successfully. */\n  onStatusChanged?: () => void\n  /** This callback is called when the kmlLayer instance has loaded. It is called with the kmlLayer instance. */\n  onLoad: (kmlLayer: google.maps.KmlLayer) => void\n  /** This callback is called when the component unmounts. It is called with the kmlLayer instance. */\n  onUnmount: (kmlLayer: google.maps.KmlLayer) => void\n}\n\nexport class KmlLayer extends PureComponent<KmlLayerProps, KmlLayerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: KmlLayerState = {\n    kmlLayer: null,\n  }\n\n  setKmlLayerCallback = (): void => {\n    if (this.state.kmlLayer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.kmlLayer)\n    }\n  }\n\n  componentDidMount(): void {\n    const kmlLayer = new google.maps.KmlLayer({\n      ...this.props.options,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: kmlLayer,\n    })\n\n    this.setState(function setLmlLayer() {\n      return {\n        kmlLayer,\n      }\n    }, this.setKmlLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: KmlLayerProps): void {\n    if (this.state.kmlLayer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.kmlLayer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.kmlLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.kmlLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.kmlLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default KmlLayer\n","import { PositionDrawProps } from \"../../types\"\n\n/* eslint-disable filenames/match-regex */\nexport function getOffsetOverride(\n  containerElement: HTMLElement,\n  getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => { x: number; y: number }\n): { x: number; y: number } | {} {\n  return typeof getPixelPositionOffset === 'function'\n    ? getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight)\n    : {}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLatLng = (inst: any, Type: any): any => new Type(inst.lat, inst.lng)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLatLngBounds = (inst: any, Type: any): any =>\n  new Type(\n    new google.maps.LatLng(inst.ne.lat, inst.ne.lng),\n    new google.maps.LatLng(inst.sw.lat, inst.sw.lng)\n  )\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ensureOfType = (inst: any, type: any, factory: any): any => {\n  return inst instanceof type ? inst : factory(inst, type)\n}\n\nconst getLayoutStylesByBounds = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  bounds: google.maps.LatLngBounds\n): { left: string; top: string; width?: string; height?: string } => {\n  const ne = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast())\n\n  const sw = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest())\n\n  if (ne && sw) {\n    return {\n      left: `${sw.x + offset.x}px`,\n      top: `${ne.y + offset.y}px`,\n      width: `${ne.x - sw.x - offset.x}px`,\n      height: `${sw.y - ne.y - offset.y}px`,\n    }\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px',\n  }\n}\n\nconst getLayoutStylesByPosition = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  position: google.maps.LatLng\n): { left: string; top: string } => {\n  const point = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(position)\n\n  if (point) {\n    const { x, y } = point\n\n    return {\n      left: `${x + offset.x}px`,\n      top: `${y + offset.y}px`,\n    }\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px',\n  }\n}\n\nexport const getLayoutStyles = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n): PositionDrawProps => {\n  return bounds !== undefined\n    ? getLayoutStylesByBounds(\n        mapCanvasProjection,\n        offset,\n        ensureOfType(bounds, google.maps.LatLngBounds, createLatLngBounds)\n      )\n    : getLayoutStylesByPosition(\n        mapCanvasProjection,\n        offset,\n        ensureOfType(position, google.maps.LatLng, createLatLng)\n      )\n}\n\nexport const arePositionsEqual = (\n  currentPosition: PositionDrawProps,\n  previousPosition: PositionDrawProps\n): boolean => {\n  return currentPosition.left === previousPosition.left\n    && currentPosition.top === previousPosition.top\n    && currentPosition.width === previousPosition.height\n    && currentPosition.height === previousPosition.height;\n}","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport invariant from 'invariant'\n\nimport MapContext from '../../map-context'\n\nimport { getOffsetOverride, getLayoutStyles, arePositionsEqual } from './dom-helper'\n\ninterface OverlayViewState {\n  paneEl: Element | null\n  containerStyle: React.CSSProperties\n}\n\nfunction convertToLatLngString(latLngLike?: google.maps.LatLng | google.maps.LatLngLiteral | null) {\n  if (!latLngLike) {\n    return ''\n  }\n\n  const latLng = latLngLike instanceof google.maps.LatLng\n    ? latLngLike\n    : new google.maps.LatLng(latLngLike.lat, latLngLike.lng)\n\n  return latLng + ''\n}\n\nfunction convertToLatLngBoundsString(latLngBoundsLike?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral | null) {\n  if (!latLngBoundsLike) {\n    return ''\n  }\n\n  const latLngBounds = latLngBoundsLike instanceof google.maps.LatLngBounds\n    ? latLngBoundsLike\n    : new google.maps.LatLngBounds(\n        new google.maps.LatLng(latLngBoundsLike.south, latLngBoundsLike.east),\n        new google.maps.LatLng(latLngBoundsLike.north, latLngBoundsLike.west)\n      )\n\n  return latLngBounds + ''\n}\n\nexport type PaneNames = keyof google.maps.MapPanes\nexport interface OverlayViewProps {\n  // required\n  mapPaneName: PaneNames\n  getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => { x: number; y: number }\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  onLoad?: (overlayView: google.maps.OverlayView) => void\n  onUnmount?: (overlayView: google.maps.OverlayView) => void\n}\n\nexport class OverlayView extends React.PureComponent<OverlayViewProps, OverlayViewState> {\n  static FLOAT_PANE: PaneNames = `floatPane`\n  static MAP_PANE: PaneNames = `mapPane`\n  static MARKER_LAYER: PaneNames = `markerLayer`\n  static OVERLAY_LAYER: PaneNames = `overlayLayer`\n  static OVERLAY_MOUSE_TARGET: PaneNames = `overlayMouseTarget`\n\n  static contextType = MapContext\n\n  state: OverlayViewState = {\n    paneEl: null,\n    containerStyle: {\n      // set initial position\n      position: 'absolute'\n    },\n  }\n\n  overlayView: google.maps.OverlayView\n  containerRef: React.RefObject<HTMLDivElement>\n\n  updatePane = (): void => {\n    const mapPaneName = this.props.mapPaneName\n\n    // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n    const mapPanes = this.overlayView.getPanes()\n    invariant(\n      !!mapPaneName,\n      `OverlayView requires props.mapPaneName but got %s`,\n      mapPaneName\n    )\n\n    if (mapPanes) {\n      this.setState({\n        paneEl: mapPanes[mapPaneName]\n      })\n    } else {\n      this.setState({\n        paneEl: null\n      })\n    }\n  }\n  onAdd = (): void => {\n    this.updatePane()\n    this.props.onLoad?.(this.overlayView)\n  }\n\n  onPositionElement = (): void => {\n    const mapCanvasProjection = this.overlayView.getProjection()\n\n    const offset = {\n      x: 0,\n      y: 0,\n      ...(this.containerRef.current\n        ? getOffsetOverride(this.containerRef.current, this.props.getPixelPositionOffset)\n        : {}),\n    }\n\n    const layoutStyles = getLayoutStyles(\n      mapCanvasProjection,\n      offset,\n      this.props.bounds,\n      this.props.position\n    )\n\n    const { left, top, width, height } = this.state.containerStyle;\n    if(!arePositionsEqual(layoutStyles, { left, top, width, height })) {\n      this.setState({\n        containerStyle: {\n          ...layoutStyles,\n          position: 'absolute'\n        },\n      })\n    }\n  }\n\n  draw = (): void => {\n    this.onPositionElement()\n  }\n\n  onRemove = (): void => {\n    this.setState(() => ({\n      paneEl: null\n    }))\n    // this.mapPaneEl = null\n    this.props.onUnmount?.(this.overlayView)\n  }\n\n  constructor(props: OverlayViewProps) {\n    super(props)\n\n    this.containerRef = React.createRef()\n    // You must implement three methods: onAdd(), draw(), and onRemove().\n    const overlayView = new google.maps.OverlayView()\n    overlayView.onAdd = this.onAdd\n    overlayView.draw = this.draw\n    overlayView.onRemove = this.onRemove\n    this.overlayView = overlayView\n  }\n\n  componentDidMount(): void {\n    // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n    this.overlayView.setMap(this.context)\n  }\n\n  componentDidUpdate(prevProps: OverlayViewProps): void {\n    const prevPositionString = convertToLatLngString(prevProps.position)\n    const positionString = convertToLatLngString(this.props.position)\n    const prevBoundsString = convertToLatLngBoundsString(prevProps.bounds)\n    const boundsString = convertToLatLngBoundsString(this.props.bounds)\n\n    if (prevPositionString !== positionString || prevBoundsString !== boundsString) {\n      this.overlayView.draw()\n    }\n    if (prevProps.mapPaneName !== this.props.mapPaneName) {\n      this.updatePane()\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.overlayView.setMap(null)\n  }\n\n  render(): React.ReactPortal | React.ReactNode {\n    const paneEl = this.state.paneEl\n    if (paneEl) {\n      return ReactDOM.createPortal(\n        <div\n          ref={this.containerRef}\n          style={this.state.containerStyle}\n        >\n          {React.Children.only(this.props.children)}\n        </div>,\n        paneEl\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default OverlayView\n","export function noop(): void {}\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport { noop } from '../../utils/noop'\n\nconst eventMap = {\n  onDblClick: 'dblclick',\n  onClick: 'click',\n}\n\nconst updaterMap = {\n  opacity(instance: google.maps.GroundOverlay, opacity: number): void {\n    instance.setOpacity(opacity)\n  },\n}\n\ninterface GroundOverlayState {\n  groundOverlay: google.maps.GroundOverlay | null\n}\n\nexport interface GroundOverlayProps {\n  options?: google.maps.GroundOverlayOptions\n  /** The opacity of the overlay, expressed as a number between 0 and 1. Optional. Defaults to 1. */\n  opacity?: number\n  /** This event is fired when the DOM dblclick event is fired on the GroundOverlay. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the GroundOverlay. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** The url of the projected image */\n  url: string\n  /** The bounds that the image will be scaled to fit */\n  bounds: google.maps.LatLngBounds\n  /** This callback is called when the groundOverlay instance has loaded. It is called with the groundOverlay instance. */\n  onLoad?: (groundOverlay: google.maps.GroundOverlay) => void\n  /** This callback is called when the component unmounts. It is called with the groundOverlay instance. */\n  onUnmount?: (groundOverlay: google.maps.GroundOverlay) => void\n}\n\nexport class GroundOverlay extends React.PureComponent<GroundOverlayProps, GroundOverlayState> {\n  public static defaultProps = {\n    onLoad: noop,\n  }\n\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: GroundOverlayState = {\n    groundOverlay: null,\n  }\n\n  setGroundOverlayCallback = (): void => {\n    if (this.state.groundOverlay !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.groundOverlay)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.url || !!this.props.bounds,\n      `For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by \\`react-google-maps-api\\`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just \\`key={url}\\` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655`\n    )\n\n    const groundOverlay = new google.maps.GroundOverlay(this.props.url, this.props.bounds, {\n      ...this.props.options,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: groundOverlay,\n    })\n\n    this.setState(function setGroundOverlay() {\n      return {\n        groundOverlay,\n      }\n    }, this.setGroundOverlayCallback)\n  }\n\n  componentDidUpdate(prevProps: GroundOverlayProps): void {\n    if (this.state.groundOverlay !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.groundOverlay,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.groundOverlay) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.groundOverlay)\n      }\n\n      this.state.groundOverlay.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default GroundOverlay\n","import * as React from 'react'\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {}\n\nconst updaterMap = {\n  data(\n    instance: google.maps.visualization.HeatmapLayer,\n    data:\n      | google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation>\n      | google.maps.LatLng[]\n      | google.maps.visualization.WeightedLocation[]\n  ): void {\n    instance.setData(data)\n  },\n  map(instance: google.maps.visualization.HeatmapLayer, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(\n    instance: google.maps.visualization.HeatmapLayer,\n    options: google.maps.visualization.HeatmapLayerOptions\n  ): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface HeatmapLayerState {\n  heatmapLayer: google.maps.visualization.HeatmapLayer | null\n}\n\nexport interface HeatmapLayerProps {\n  // required\n  /** The data points to display. Required. */\n  data:\n    | google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation>\n    | google.maps.LatLng[]\n    | google.maps.visualization.WeightedLocation[]\n  options?: google.maps.visualization.HeatmapLayerOptions\n  /** This callback is called when the heatmapLayer instance has loaded. It is called with the heatmapLayer instance. */\n  onLoad?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void\n  /** This callback is called when the component unmounts. It is called with the heatmapLayer instance. */\n  onUnmount?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void\n}\n\nexport class HeatmapLayer extends React.PureComponent<HeatmapLayerProps, HeatmapLayerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: HeatmapLayerState = {\n    heatmapLayer: null,\n  }\n\n  setHeatmapLayerCallback = (): void => {\n    if (this.state.heatmapLayer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.heatmapLayer)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.visualization,\n      'Did you include prop libraries={[\"visualization\"]} to <LoadScript />? %s',\n      google.maps.visualization\n    )\n\n    invariant(!!this.props.data, 'data property is required in HeatmapLayer %s', this.props.data)\n\n    const heatmapLayer = new google.maps.visualization.HeatmapLayer({\n      ...(this.props.options || {}),\n      data: this.props.data,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: heatmapLayer,\n    })\n\n    this.setState(function setHeatmapLayer() {\n      return {\n        heatmapLayer,\n      }\n    }, this.setHeatmapLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: HeatmapLayerProps): void {\n    unregisterEvents(this.registeredEvents)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.heatmapLayer,\n    })\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.heatmapLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.heatmapLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.heatmapLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default HeatmapLayer\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onPanoChanged: 'pano_changed',\n  onPositionChanged: 'position_changed',\n  onPovChanged: 'pov_changed',\n  onResize: 'resize',\n  onStatusChanged: 'status_changed',\n  onVisibleChanged: 'visible_changed',\n  onZoomChanged: 'zoom_changed',\n}\n\nconst updaterMap = {\n  register(\n    instance: google.maps.StreetViewPanorama,\n    provider: (input: string) => google.maps.StreetViewPanoramaData,\n    options: google.maps.PanoProviderOptions\n  ): void {\n    instance.registerPanoProvider(provider, options)\n  },\n  links(instance: google.maps.StreetViewPanorama, links: google.maps.StreetViewLink[]): void {\n    instance.setLinks(links)\n  },\n  motionTracking(instance: google.maps.StreetViewPanorama, motionTracking: boolean): void {\n    instance.setMotionTracking(motionTracking)\n  },\n  options(\n    instance: google.maps.StreetViewPanorama,\n    options: google.maps.StreetViewPanoramaOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  pano(instance: google.maps.StreetViewPanorama, pano: string): void {\n    instance.setPano(pano)\n  },\n  position(\n    instance: google.maps.StreetViewPanorama,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  pov(instance: google.maps.StreetViewPanorama, pov: google.maps.StreetViewPov): void {\n    instance.setPov(pov)\n  },\n  visible(instance: google.maps.StreetViewPanorama, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zoom(instance: google.maps.StreetViewPanorama, zoom: number): void {\n    instance.setZoom(zoom)\n  },\n}\n\ninterface StreetViewPanoramaState {\n  streetViewPanorama: google.maps.StreetViewPanorama | null\n}\n\nexport interface StreetViewPanoramaProps {\n  options?: google.maps.StreetViewPanoramaOptions\n  /** This event is fired when the close button is clicked. */\n  onCloseclick?: (event: google.maps.MapMouseEvent) => void\n  /** This event is fired when the panorama's pano id changes. The pano may change as the user navigates through the panorama or the position is manually set. Note that not all position changes trigger a pano_changed. */\n  onPanoChanged?: () => void\n  /** This event is fired when the panorama's position changes. The position changes as the user navigates through the panorama or the position is set manually. */\n  onPositionChanged?: () => void\n  /** This event is fired when the panorama's point-of-view changes. The point of view changes as the pitch, zoom, or heading changes. */\n  onPovChanged?: () => void\n  /** Developers should trigger this event on the panorama when its div changes size: google.maps.event.trigger(panorama, 'resize'). */\n  onResize?: () => void\n  /** This event is fired after every panorama lookup by id or location, via setPosition() or setPano(). */\n  onStatusChanged?: () => void\n  /** This event is fired when the panorama's visibility changes. The visibility is changed when the Pegman is dragged onto the map, the close button is clicked, or setVisible() is called. */\n  onVisibleChanged?: () => void\n  /** This event is fired when the panorama's zoom level changes. */\n  onZoomChange?: () => void\n  /** This callback is called when the streetViewPanorama instance has loaded. It is called with the streetViewPanorama instance. */\n  onLoad?: (streetViewPanorama: google.maps.StreetViewPanorama) => void\n  /** This callback is called when the component unmounts. It is called with the streetViewPanorama instance. */\n  onUnmount?: (streetViewPanorama: google.maps.StreetViewPanorama) => void\n}\n\nexport class StreetViewPanorama extends React.PureComponent<\n  StreetViewPanoramaProps,\n  StreetViewPanoramaState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: StreetViewPanoramaState = {\n    streetViewPanorama: null,\n  }\n\n  setStreetViewPanoramaCallback = (): void => {\n    if (this.state.streetViewPanorama !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.streetViewPanorama)\n    }\n  }\n\n  componentDidMount(): void {\n    const streetViewPanorama = this.context.getStreetView()\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama,\n    })\n\n    this.setState(function setStreetViewPanorama() {\n      return {\n        streetViewPanorama,\n      }\n    }, this.setStreetViewPanoramaCallback)\n  }\n\n  componentDidUpdate(prevProps: StreetViewPanoramaProps): void {\n    if (this.state.streetViewPanorama !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.streetViewPanorama.setVisible(false)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default StreetViewPanorama\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\nexport interface StreetViewServiceProps {\n  /** This callback is called when the streetViewService instance has loaded. It is called with the streetViewService instance. */\n  onLoad?: (streetViewService: google.maps.StreetViewService | null) => void\n  /** This callback is called when the component unmounts. It is called with the streetViewService instance. */\n  onUnmount?: (streetViewService: google.maps.StreetViewService | null) => void\n}\n\ninterface StreetViewServiceState {\n  streetViewService: google.maps.StreetViewService | null\n}\n\nexport class StreetViewService extends React.PureComponent<\n  StreetViewServiceProps,\n  StreetViewServiceState\n> {\n  static contextType = MapContext\n\n  state = {\n    streetViewService: null,\n  }\n\n  setStreetViewServiceCallback = (): void => {\n    if (this.state.streetViewService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.streetViewService)\n    }\n  }\n\n  componentDidMount(): void {\n    const streetViewService = new google.maps.StreetViewService()\n\n    this.setState(function setStreetViewService() {\n      return {\n        streetViewService,\n      }\n    }, this.setStreetViewServiceCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.streetViewService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewService)\n      }\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default StreetViewService\n","import * as React from 'react'\nimport invariant from 'invariant'\n\ninterface DirectionsServiceState {\n  directionsService: google.maps.DirectionsService | null\n}\n\nexport interface DirectionsServiceProps {\n  // required for default functionality\n  options: google.maps.DirectionsRequest\n\n  // required for default functionality\n  callback: (\n    // required\n    /** The directions response retrieved from the directions server. You can render these using a DirectionsRenderer or parse this object and render it yourself. You must display the warnings and copyrights as noted in the Google Maps Platform Terms of Service. Note that though this result is \"JSON-like,\" it is not strictly JSON, as it indirectly includes LatLng objects */\n    result: google.maps.DirectionsResult,\n    // required\n    /** The status returned by the DirectionsService on the completion of a call to route(). Specify these by value, or by using the constant's name. For example, 'OK' or google.maps.DirectionsStatus.OK */\n    status: google.maps.DirectionsStatus\n  ) => void\n  /** This callback is called when the directionsService instance has loaded. It is called with the directionsService instance. */\n  onLoad?: (directionsService: google.maps.DirectionsService) => void\n  /** This callback is called when the component unmounts. It is called with the directionsService instance. */\n  onUnmount?: (directionsService: google.maps.DirectionsService) => void\n}\n\nexport class DirectionsService extends React.PureComponent<\n  DirectionsServiceProps,\n  DirectionsServiceState\n> {\n  state: DirectionsServiceState = {\n    directionsService: null,\n  }\n\n  setDirectionsServiceCallback = (): void => {\n    if (this.state.directionsService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.directionsService)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.options,\n      'DirectionsService expected options object as parameter, but got %s',\n      this.props.options\n    )\n\n    const directionsService = new google.maps.DirectionsService()\n\n    this.setState(function setDirectionsService() {\n      return {\n        directionsService,\n      }\n    }, this.setDirectionsServiceCallback)\n  }\n\n  componentDidUpdate(): void {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DirectionsService\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onDirectionsChanged: 'directions_changed',\n}\n\nconst updaterMap = {\n  directions(\n    instance: google.maps.DirectionsRenderer,\n    directions: google.maps.DirectionsResult\n  ): void {\n    instance.setDirections(directions)\n  },\n  map(instance: google.maps.DirectionsRenderer, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(\n    instance: google.maps.DirectionsRenderer,\n    options: google.maps.DirectionsRendererOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  panel(instance: google.maps.DirectionsRenderer, panel: Element): void {\n    instance.setPanel(panel)\n  },\n  routeIndex(instance: google.maps.DirectionsRenderer, routeIndex: number): void {\n    instance.setRouteIndex(routeIndex)\n  },\n}\n\ninterface DirectionsRendererState {\n  directionsRenderer: google.maps.DirectionsRenderer | null\n}\n\nexport interface DirectionsRendererProps {\n  options?: google.maps.DirectionsRendererOptions\n  /** The directions to display on the map and/or in a <div> panel, retrieved as a DirectionsResult object from DirectionsService. */\n  directions?: google.maps.DirectionsResult\n  /** The <div> in which to display the directions steps. */\n  panel?: Element\n  /** The index of the route within the DirectionsResult object. The default value is 0. */\n  routeIndex?: number\n  /** This event is fired when the rendered directions change, either when a new DirectionsResult is set or when the user finishes dragging a change to the directions path. */\n  onDirectionsChanged?: () => void\n  /** This callback is called when the directionsRenderer instance has loaded. It is called with the directionsRenderer instance. */\n  onLoad?: (directionsRenderer: google.maps.DirectionsRenderer) => void\n  /** This callback is called when the component unmounts. It is called with the directionsRenderer instance. */\n  onUnmount?: (directionsRenderer: google.maps.DirectionsRenderer) => void\n}\n\nexport class DirectionsRenderer extends React.PureComponent<\n  DirectionsRendererProps,\n  DirectionsRendererState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DirectionsRendererState = {\n    directionsRenderer: null,\n  }\n\n  setDirectionsRendererCallback = (): void => {\n    if (this.state.directionsRenderer !== null) {\n      this.state.directionsRenderer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.directionsRenderer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const directionsRenderer = new google.maps.DirectionsRenderer(this.props.options)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: directionsRenderer,\n    })\n\n    this.setState(function setDirectionsRenderer() {\n      return {\n        directionsRenderer,\n      }\n    }, this.setDirectionsRendererCallback)\n  }\n\n  componentDidUpdate(prevProps: DirectionsRendererProps): void {\n    if (this.state.directionsRenderer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.directionsRenderer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.directionsRenderer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsRenderer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.state.directionsRenderer) {\n        this.state.directionsRenderer.setMap(null)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DirectionsRenderer\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\ninterface DistanceMatrixServiceState {\n  distanceMatrixService: google.maps.DistanceMatrixService | null\n}\n\nexport interface DistanceMatrixServiceProps {\n  // required for default functionality\n  options: google.maps.DistanceMatrixRequest\n\n  // required for default functionality\n  callback: (\n    // required\n    /** The response to a DistanceMatrixService request, consisting of the formatted origin and destination addresses, and a sequence of DistanceMatrixResponseRows, one for each corresponding origin address. */\n    response: google.maps.DistanceMatrixResponse,\n    // required\n    /** The top-level status about the request in general returned by the DistanceMatrixService upon completion of a distance matrix request. Specify these by value, or by using the constant's name. For example, 'OK' or google.maps.DistanceMatrixStatus.OK. */\n    status: google.maps.DistanceMatrixStatus\n  ) => void\n  /** This callback is called when the distanceMatrixService instance has loaded. It is called with the distanceMatrixService instance. */\n  onLoad?: (distanceMatrixService: google.maps.DistanceMatrixService) => void\n  /** This callback is called when the component unmounts. It is called with the distanceMatrixService instance. */\n  onUnmount?: (distanceMatrixService: google.maps.DistanceMatrixService) => void\n}\n\nexport class DistanceMatrixService extends React.PureComponent<\n  DistanceMatrixServiceProps,\n  DistanceMatrixServiceState\n> {\n  state: DistanceMatrixServiceState = {\n    distanceMatrixService: null,\n  }\n\n  setDistanceMatrixServiceCallback = (): void => {\n    if (this.state.distanceMatrixService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.distanceMatrixService)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.options,\n      'DistanceMatrixService expected options object as parameter, but go %s',\n      this.props.options\n    )\n\n    const distanceMatrixService = new google.maps.DistanceMatrixService()\n\n    this.setState(function setDistanceMatrixService() {\n      return {\n        distanceMatrixService,\n      }\n    }, this.setDistanceMatrixServiceCallback)\n  }\n\n  componentDidUpdate(): void {\n    if (this.state.distanceMatrixService !== null) {\n      this.state.distanceMatrixService.getDistanceMatrix(this.props.options, this.props.callback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.distanceMatrixService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.distanceMatrixService)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DistanceMatrixService\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onPlacesChanged: 'places_changed',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.places.SearchBox,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n}\n\ninterface StandaloneSearchBoxState {\n  searchBox: google.maps.places.SearchBox | null\n}\n\nexport interface StandaloneSearchBoxProps {\n  /** The area towards which to bias query predictions. Predictions are biased towards, but not restricted to, queries targeting these bounds. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  options?: google.maps.places.SearchBoxOptions\n  /** This event is fired when the user selects a query, getPlaces should be used to get new places. */\n  onPlacesChanged?: () => void\n  /** This callback is called when the searchBox instance has loaded. It is called with the searchBox instance. */\n  onLoad?: (searchBox: google.maps.places.SearchBox) => void\n  /** This callback is called when the component unmounts. It is called with the searchBox instance. */\n  onUnmount?: (searchBox: google.maps.places.SearchBox) => void\n}\n\nclass StandaloneSearchBox extends React.PureComponent<\n  StandaloneSearchBoxProps,\n  StandaloneSearchBoxState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  containerElement: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state: StandaloneSearchBoxState = {\n    searchBox: null,\n  }\n\n  setSearchBoxCallback = (): void => {\n    if (this.state.searchBox !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.searchBox)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.places,\n      'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s',\n      google.maps.places\n    )\n\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      const input = this.containerElement.current.querySelector('input')\n\n      if (input !== null) {\n        const searchBox = new google.maps.places.SearchBox(input, this.props.options)\n\n        this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n          updaterMap,\n          eventMap,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox,\n        })\n\n        this.setState(function setSearchBox() {\n          return {\n            searchBox,\n          }\n        }, this.setSearchBoxCallback)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: StandaloneSearchBoxProps): void {\n    if (this.state.searchBox !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox)\n      }\n\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <div ref={this.containerElement}>{React.Children.only(this.props.children)}</div>\n  }\n}\n\nexport default StandaloneSearchBox\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nimport invariant from 'invariant'\n\nconst eventMap = {\n  onPlaceChanged: 'place_changed',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.places.Autocomplete,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n  restrictions(\n    instance: google.maps.places.Autocomplete,\n    restrictions: google.maps.places.ComponentRestrictions\n  ): void {\n    instance.setComponentRestrictions(restrictions)\n  },\n  fields(instance: google.maps.places.Autocomplete, fields: string[]): void {\n    instance.setFields(fields)\n  },\n  options(\n    instance: google.maps.places.Autocomplete,\n    options: google.maps.places.AutocompleteOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  types(instance: google.maps.places.Autocomplete, types: string[]): void {\n    instance.setTypes(types)\n  },\n}\n\ninterface AutocompleteState {\n  autocomplete: google.maps.places.Autocomplete | null\n}\n\nexport interface AutocompleteProps {\n  // required\n  children: React.ReactChild\n  /** The area in which to search for places. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  /** The component restrictions. Component restrictions are used to restrict predictions to only those within the parent component. For example, the country. */\n  restrictions?: google.maps.places.ComponentRestrictions\n  /** Fields to be included for the Place in the details response when the details are successfully retrieved. For a list of fields see PlaceResult. Nested fields can be specified with dot-paths (for example, \"geometry.location\"). */\n  fields?: string[]\n  options?: google.maps.places.AutocompleteOptions\n  /** The types of predictions to be returned. For a list of supported types, see the developer's guide. If nothing is specified, all types are returned. In general only a single type is allowed. The exception is that you can safely mix the 'geocode' and 'establishment' types, but note that this will have the same effect as specifying no types. */\n  types?: string[]\n  /** This event is fired when a PlaceResult is made available for a Place the user has selected. If the user enters the name of a Place that was not suggested by the control and presses the Enter key, or if a Place Details request fails, the PlaceResult contains the user input in the name property, with no other properties defined. */\n  onPlaceChanged?: () => void\n  /** This callback is called when the autocomplete instance has loaded. It is called with the autocomplete instance. */\n  onLoad?: (autocomplete: google.maps.places.Autocomplete) => void\n  /** This callback is called when the component unmounts. It is called with the autocomplete instance. */\n  onUnmount?: (autocomplete: google.maps.places.Autocomplete) => void\n  className?: string\n}\n\nexport class Autocomplete extends React.PureComponent<AutocompleteProps, AutocompleteState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state: AutocompleteState = {\n    autocomplete: null,\n  }\n\n  setAutocompleteCallback = (): void => {\n    if (this.state.autocomplete !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.autocomplete)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.places,\n      'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s',\n      google.maps.places\n    )\n\n    // TODO: why current could be equal null?\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const input = this.containerElement.current.querySelector('input')\n\n    if (input) {\n      const autocomplete = new google.maps.places.Autocomplete(input, this.props.options)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: autocomplete,\n      })\n\n      this.setState(function setAutocomplete() {\n        return {\n          autocomplete,\n        }\n      }, this.setAutocompleteCallback)\n    }\n  }\n\n  componentDidUpdate(prevProps: AutocompleteProps): void {\n    unregisterEvents(this.registeredEvents)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.autocomplete,\n    })\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.autocomplete !== null) {\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <div ref={this.containerElement} className={this.props.className || ''}>{React.Children.only(this.props.children)}</div>\n  }\n}\n\nexport default Autocomplete\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}